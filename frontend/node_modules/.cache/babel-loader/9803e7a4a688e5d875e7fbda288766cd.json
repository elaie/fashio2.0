{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaie\\\\Downloads\\\\FullStack_Ecommerce_App-main\\\\frontend\\\\src\\\\components\\\\UserAddressComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card } from 'react-bootstrap';\nimport { getAllAddress } from '../actions/userActions';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserAddressComponent({\n  handleAddressId\n}) {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const updatehandleAddressId = id => {\n    handleAddressId(id);\n  }; // login reducer\n\n\n  const userLoginReducer = useSelector(state => state.userLoginReducer);\n  const {\n    userInfo\n  } = userLoginReducer; // get address list reducer\n\n  const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer);\n  const {\n    addresses\n  } = getAllAddressesOfUserReducer;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(getAllAddress());\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: addresses ? addresses.map((address, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-2 mb-2\",\n        style: {\n          border: \"1px solid\",\n          borderColor: \"#C6ACE7\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"addressId\",\n          value: 0,\n          onClick: () => updatehandleAddressId(address.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 31\n          }, this), address.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 31\n          }, this), address.house_no, \", \", address.landmark, \", \", address.city, \",\", address.state, \", \", address.pin_code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, address.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)) : \"empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserAddressComponent, \"3RXqw9hxIGSGjBsKMRVP2Q5lb+g=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = UserAddressComponent;\nexport default UserAddressComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAddressComponent\");","map":{"version":3,"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/components/UserAddressComponent.js"],"names":["React","useEffect","useSelector","useDispatch","Card","getAllAddress","useHistory","UserAddressComponent","handleAddressId","history","dispatch","updatehandleAddressId","id","userLoginReducer","state","userInfo","getAllAddressesOfUserReducer","addresses","push","map","address","idx","border","borderColor","name","house_no","landmark","city","pin_code"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAGA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAAmD;AAAA;;AAE/C,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,qBAAqB,GAAIC,EAAD,IAAQ;AAClCJ,IAAAA,eAAe,CAACI,EAAD,CAAf;AACH,GAFD,CAL+C,CAS/C;;;AACA,QAAMC,gBAAgB,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,gBAAhB,CAApC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,gBAArB,CAX+C,CAa/C;;AACA,QAAMG,4BAA4B,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACE,4BAAhB,CAAhD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,4BAAtB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACc,QAAL,EAAe;AACXN,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACH,KAFD,MAEO;AACHR,MAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACH;AACJ,GANQ,EAMN,CAACK,QAAD,EAAWD,OAAX,EAAoBM,QAApB,CANM,CAAT;AASA,sBACI;AAAA,cACKE,SAAS,GAAGA,SAAS,CAACE,GAAV,CAAc,CAACC,OAAD,EAAUC,GAAV,kBACvB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,WAAV;AAAuBC,UAAAA,WAAW,EAAE;AAApC,SAFX;AAAA,gCAMI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,WAFT;AAGI,UAAA,KAAK,EAAE,CAHX;AAII,UAAA,OAAO,EAAE,MAAMZ,qBAAqB,CAACS,OAAO,CAACR,EAAT;AAJxC;AAAA;AAAA;AAAA;AAAA,gBANJ,eAYI;AAAA,kCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,EAAoBQ,OAAO,CAACI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAA,kCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,EACCJ,OAAO,CAACK,QADT,QACqBL,OAAO,CAACM,QAD7B,QACyCN,OAAO,CAACO,IADjD,OAECP,OAAO,CAACN,KAFT,QAEkBM,OAAO,CAACQ,QAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA,SAGSR,OAAO,CAACR,EAHjB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUS,GAAV;AAAA;AAAA;AAAA;AAAA,YADS,CAAH,GAsBN;AAvBR;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAvDQd,oB;UAESD,U,EACGH,W,EAOQD,W,EAIYA,W;;;KAdhCK,oB;AAyDT,eAAeA,oBAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n"]},"metadata":{},"sourceType":"module"}
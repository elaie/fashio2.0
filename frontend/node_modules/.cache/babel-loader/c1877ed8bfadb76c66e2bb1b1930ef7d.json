{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaie\\\\Downloads\\\\FullStack_Ecommerce_App-main\\\\frontend\\\\src\\\\pages\\\\AccountUpdatePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions';\nimport Message from '../components/Message';\nimport { Spinner } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { UPDATE_USER_DETAILS_RESET } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AccountUpdatePage() {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch(); // check token validation reducer\n\n  const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer);\n  const {\n    error: tokenError\n  } = checkTokenValidationReducer;\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\"); // login reducer\n\n  const userLoginReducer = useSelector(state => state.userLoginReducer);\n  const {\n    userInfo\n  } = userLoginReducer; // user details reducer\n\n  const userDetailsReducer = useSelector(state => state.userDetailsReducer);\n  const {\n    user: userAccDetails,\n    loading\n  } = userDetailsReducer; // user update details reducer\n\n  const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer);\n  const {\n    success\n  } = userDetailsUpdateReducer;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    dispatch(checkTokenValidation());\n    dispatch(userDetails(userInfo.id));\n  }, [dispatch, history, userInfo]);\n\n  if (userInfo && tokenError === \"Request failed with status code 401\") {\n    alert(\"Session expired, please login again.\");\n    dispatch(logout());\n    history.push(\"/login\");\n    window.location.reload();\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const updatedUsername = username === \"\" ? userAccDetails.username : username;\n    const updatedEmail = email === \"\" ? userAccDetails.email : email;\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n    } else {\n      const userData = {\n        'username': updatedUsername,\n        'email': updatedEmail,\n        'password': password\n      };\n      dispatch(userUpdateDetails(userData));\n    }\n  }; // logout\n\n\n  const logoutHandler = () => {\n    history.push(\"/login\");\n    dispatch(logout()); // action        \n  };\n\n  if (success) {\n    alert(\"Account successfully updated.\");\n    dispatch({\n      type: UPDATE_USER_DETAILS_RESET\n    });\n    history.push(\"/account/\");\n    dispatch(userDetails(userInfo.id));\n  }\n\n  const renderData = () => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-flex justify-content-center\",\n              style: {\n                display: \"flex\",\n                marginBottom: \"15px\",\n                color: \"#008080\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Update User Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"username\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  autoFocus: true,\n                  type: \"text\",\n                  defaultValue: userAccDetails.username,\n                  placeholder: \"username\",\n                  onChange: e => setUsername(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"enter email\",\n                  defaultValue: userAccDetails.email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"password\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Reset-Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"enter new password\",\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"confirmPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Confirm Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"confirm new password\",\n                  onChange: e => setConfirmPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"success\",\n                className: \"btn-sm\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/account`,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-primary btn-sm ml-2\",\n                  type: \"button\",\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: [\"Something went wrong, go back to \", /*#__PURE__*/_jsxDEV(Link, {\n          onClick: logoutHandler,\n          to: `/login`,\n          children: \" Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 79\n        }, this), \" page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return renderData();\n}\n\n_s(AccountUpdatePage, \"IKmNGcNm+fbDVRVU8oCPiQouyHM=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AccountUpdatePage;\nexport default AccountUpdatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountUpdatePage\");","map":{"version":3,"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/pages/AccountUpdatePage.js"],"names":["React","useState","useEffect","Row","Col","Form","Button","Link","useDispatch","useSelector","userDetails","userUpdateDetails","checkTokenValidation","logout","Message","Spinner","useHistory","UPDATE_USER_DETAILS_RESET","AccountUpdatePage","history","dispatch","checkTokenValidationReducer","state","error","tokenError","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userLoginReducer","userInfo","userDetailsReducer","user","userAccDetails","loading","userDetailsUpdateReducer","success","push","id","alert","window","location","reload","onSubmit","e","preventDefault","updatedUsername","updatedEmail","userData","logoutHandler","type","renderData","display","marginBottom","color","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\n\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n"]},"metadata":{},"sourceType":"module"}
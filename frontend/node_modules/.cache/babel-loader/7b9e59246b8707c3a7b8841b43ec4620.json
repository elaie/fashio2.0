{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaie\\\\Downloads\\\\FullStack_Ecommerce_App-main\\\\frontend\\\\src\\\\components\\\\CreateCardComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport { createCard } from '../actions/cardActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent'; // to manage our exp month and exp year\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet todays_date = new Date();\nlet current_year = todays_date.getFullYear();\n\nconst CreateCardComponent = ({\n  stripeCards,\n  addressSelected\n}) => {\n  _s();\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [userId] = useState(0);\n  const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false);\n  const [differentCard, setDifferentCard] = useState(false);\n  const [cardDetails, setCardDetails] = useState(false);\n  const [cardDetailsId, setCardDetailsId] = useState(0);\n  const [showStripeCard, setShowStripeCard] = useState(false);\n  const [deleteCardNumber] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expMonth, setExpMonth] = useState(\"\");\n  const [expYear, setExpYear] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [saveCard, setSaveCard] = useState(false); // login reducer\n\n  const userLoginReducer = useSelector(state => state.userLoginReducer);\n  const {\n    userInfo\n  } = userLoginReducer; // card delete reducer\n\n  const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer);\n  const {\n    loading,\n    success,\n    error\n  } = deleteSavedCardReducer;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo, success]); // stripe card form submission handler\n\n  const handleCardSubmittion = e => {\n    e.preventDefault();\n\n    if (addressSelected) {\n      const data = {\n        \"email\": email === \"\" ? userInfo.email : email,\n        \"cardNumber\": cardNumber,\n        \"expMonth\": expMonth ? Number(expMonth) : \"\",\n        \"expYear\": expYear ? Number(expYear) : \"\",\n        \"cvc\": cvc ? Number(cvc) : \"\",\n        \"saveCard\": saveCard\n      };\n      dispatch(createCard(data));\n    } else {\n      alert(\"Please select or add your Address to continue\");\n    }\n  }; // pay with already existing (saved) stripe card handler\n\n\n  const payWithSavedCard = cardData => {\n    if (addressSelected) {\n      const data = {\n        \"email\": cardData.email,\n        \"cardNumber\": cardData.card_number,\n        \"expMonth\": Number(cardData.exp_month),\n        \"expYear\": Number(cardData.exp_year),\n        \"cvc\": Number(cardData.cvc),\n        \"saveCard\": false\n      };\n      dispatch(createCard(data));\n    } else {\n      alert(\"Please select or add your Address to continue\");\n    }\n  }; // show card details\n\n\n  const showCardDetails = cardData => {\n    if (cardDetails) {\n      if (cardData.id === cardDetailsId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCardDetails(false),\n            className: \"btn btn-outline-danger btn-sm button-focus-css\",\n            style: {\n              float: \"right\",\n              position: \"relative\",\n              \"top\": \"-40px\"\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Exp Month:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 28\n            }, this), \" \", cardData.exp_month]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Exp Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 28\n            }, this), \" \", cardData.exp_year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  };\n\n  const toggleRunCardDeleteHandler = () => {\n    setRunCardDeleteHandler(!runCardDeleteHandler);\n  }; // reload the webpage after new card deletion\n\n\n  if (success) {\n    alert(\"Card successfully deleted.\");\n    window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(DeleteCardComponent, {\n          userId: userId,\n          deleteCardNumber: deleteCardNumber,\n          runCardDeleteHandler: runCardDeleteHandler,\n          toggleRunCardDeleteHandler: toggleRunCardDeleteHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Deleting card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card px-4 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: showStripeCard ? \"btn btn-sm btn-danger mb-3 button-focus-css\" : \"btn btn-sm btn-primary mb-3 button-focus-css\",\n        onClick: () => setShowStripeCard(!showStripeCard),\n        children: showStripeCard ? \"close\" : \"Enter stripe card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), showStripeCard ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleCardSubmittion,\n        children: [differentCard ? /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Card Holder Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            autoFocus: true,\n            type: \"email\",\n            pattern: \".+@gmail\\\\.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email address linked with the Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Default Customer Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 35\n          }, this), userInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: () => {\n              setDifferentCard(!differentCard);\n              setEmail(\"\");\n            },\n            children: differentCard ? \"Use Your default Email\" : \"Use a different Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            pattern: \"[0-9]+\",\n            value: cardNumber,\n            onChange: e => setCardNumber(e.target.value),\n            placeholder: \"Enter Your Card Number\",\n            maxLength: \"16\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Exp Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                defaultValue: expMonth,\n                onChange: e => setExpMonth(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"-- --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this), Array.from({\n                  length: 12\n                }, (x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: i + 1\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 79\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Exp Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                defaultValue: expYear,\n                onChange: e => setExpYear(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"-- --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 41\n                }, this), Array.from({\n                  length: 21\n                }, (x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: current_year + i\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 79\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"CVC Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"numbers\",\n                onChange: e => setCvc(e.target.value),\n                placeholder: \"123\",\n                maxLength: \"3\",\n                pattern: \"[0-9]+\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted pb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              hidden: differentCard,\n              type: \"checkbox\",\n              className: \"mt-1\",\n              value: differentCard ? false : saveCard,\n              onChange: () => setSaveCard(!saveCard)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              hidden: differentCard,\n              className: \"ml-1\",\n              children: \"Save my card for future payments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-sm button-focus-css\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 card px-4 py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Saved card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), stripeCards.length > 0 ? stripeCards.map(cardData => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            border: \"1px solid\",\n            borderColor: \"#C6ACE7\"\n          },\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Card Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 36\n            }, this), \" XXXX XXXX XXXX \", cardData.card_number.slice(12, 18)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [showCardDetails(cardData), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setCardDetails(true);\n                setCardDetailsId(cardData.id);\n              },\n              className: \"btn btn-sm btn-outline-primary button-focus-css\",\n              children: \"Show Card Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => payWithSavedCard(cardData),\n              className: \"ml-2 btn btn-sm btn-outline-primary button-focus-css\",\n              children: \"Pay with this Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => history.push(\"/stripe-card-details/\"),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            title: \"edit card\",\n            className: \"fas fa-edit fa-lg edit-button-css mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this)]\n      }, cardData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }, this)) : \"No saved card.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateCardComponent, \"2bi1KVzhSACaFUjj3Snuo0RLq+w=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = CreateCardComponent;\nexport default CreateCardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCardComponent\");","map":{"version":3,"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/components/CreateCardComponent.js"],"names":["React","useState","useEffect","useHistory","Form","Button","Row","Col","Card","createCard","useDispatch","useSelector","Spinner","Link","Message","DeleteCardComponent","todays_date","Date","current_year","getFullYear","CreateCardComponent","stripeCards","addressSelected","history","dispatch","userId","runCardDeleteHandler","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","deleteCardNumber","email","setEmail","cardNumber","setCardNumber","expMonth","setExpMonth","expYear","setExpYear","cvc","setCvc","saveCard","setSaveCard","userLoginReducer","state","userInfo","deleteSavedCardReducer","loading","success","error","push","handleCardSubmittion","e","preventDefault","data","Number","alert","payWithSavedCard","cardData","card_number","exp_month","exp_year","showCardDetails","id","float","position","toggleRunCardDeleteHandler","window","location","reload","display","target","value","Array","from","length","x","i","map","border","borderColor","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n"]},"metadata":{},"sourceType":"module"}
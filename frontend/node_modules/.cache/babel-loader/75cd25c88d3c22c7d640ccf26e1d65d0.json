{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, UPDATE_USER_DETAILS_REQUEST, UPDATE_USER_DETAILS_SUCCESS, UPDATE_USER_DETAILS_FAIL, UPDATE_USER_DETAILS_RESET, DELETE_USER_ACCOUNT_REQUEST, DELETE_USER_ACCOUNT_SUCCESS, DELETE_USER_ACCOUNT_FAIL, DELETE_USER_ACCOUNT_RESET, GET_USER_ALL_ADDRESSES_REQUEST, GET_USER_ALL_ADDRESSES_SUCCESS, GET_USER_ALL_ADDRESSES_FAIL, GET_SINGLE_ADDRESS_REQUEST, GET_SINGLE_ADDRESS_SUCCESS, GET_SINGLE_ADDRESS_FAIL, GET_SINGLE_ADDRESS_RESET, CREATE_USER_ADDRESS_REQUEST, CREATE_USER_ADDRESS_SUCCESS, CREATE_USER_ADDRESS_FAIL, CREATE_USER_ADDRESS_RESET, UPDATE_USER_ADDRESS_REQUEST, UPDATE_USER_ADDRESS_SUCCESS, UPDATE_USER_ADDRESS_FAIL, UPDATE_USER_ADDRESS_RESET, DELETE_USER_ADDRESS_REQUEST, DELETE_USER_ADDRESS_SUCCESS, DELETE_USER_ADDRESS_FAIL, DELETE_USER_ADDRESS_RESET, CHECK_TOKEN_VALID_REQUEST, CHECK_TOKEN_VALID_SUCCESS, CHECK_TOKEN_VALID_FAIL, CHECK_TOKEN_VALID_RESET, GET_ALL_ORDERS_REQUEST, GET_ALL_ORDERS_SUCCESS, GET_ALL_ORDERS_FAIL } from '../constants/index'; // Login\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_LOGIN_SUCCESS:\n      return { ...state,\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_LOGIN_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}; // Register\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case USER_REGISTER_SUCCESS:\n      return { ...state,\n        loading: false,\n        userInfo: action.payload\n      };\n\n    case USER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}; // user details reducer\n\nexport const userDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state,\n        loading: true,\n        user: {},\n        error: \"\"\n      };\n\n    case USER_DETAILS_SUCCESS:\n      return { ...state,\n        loading: false,\n        user: action.payload,\n        error: \"\"\n      };\n\n    case USER_DETAILS_FAIL:\n      return { ...state,\n        loading: false,\n        user: {},\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // user details update reducer\n\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_USER_DETAILS_REQUEST:\n      return { ...state,\n        loading: true,\n        user: {},\n        success: false,\n        error: \"\"\n      };\n\n    case UPDATE_USER_DETAILS_SUCCESS:\n      return { ...state,\n        loading: false,\n        success: true,\n        user: action.payload,\n        error: \"\"\n      };\n\n    case UPDATE_USER_DETAILS_FAIL:\n      return { ...state,\n        loading: false,\n        success: false,\n        user: {},\n        error: action.payload\n      };\n\n    case UPDATE_USER_DETAILS_RESET:\n      return { ...state,\n        loading: false,\n        success: false,\n        user: {},\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // delete user account reducer\n\nexport const deleteUserAccountReducer = (state = {}, action) => {\n  switch (action.type) {\n    case DELETE_USER_ACCOUNT_REQUEST:\n      return { ...state,\n        loading: true,\n        success: false,\n        error: \"\"\n      };\n\n    case DELETE_USER_ACCOUNT_SUCCESS:\n      return { ...state,\n        loading: false,\n        success: true,\n        error: \"\"\n      };\n\n    case DELETE_USER_ACCOUNT_FAIL:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: action.payload\n      };\n\n    case DELETE_USER_ACCOUNT_RESET:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // check token validation reducer\n\nexport const checkTokenValidationReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CHECK_TOKEN_VALID_REQUEST:\n      return { ...state,\n        loading: true,\n        valid: false,\n        error: \"\"\n      };\n\n    case CHECK_TOKEN_VALID_SUCCESS:\n      return { ...state,\n        loading: false,\n        valid: true,\n        error: \"\"\n      };\n\n    case CHECK_TOKEN_VALID_FAIL:\n      return { ...state,\n        loading: false,\n        valid: false,\n        error: action.payload\n      };\n\n    case CHECK_TOKEN_VALID_RESET:\n      return { ...state,\n        loading: false,\n        valid: false,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // get all addresses of user reducer\n\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_USER_ALL_ADDRESSES_REQUEST:\n      return { ...state,\n        loading: true,\n        addresses: [],\n        success: false,\n        error: \"\"\n      };\n\n    case GET_USER_ALL_ADDRESSES_SUCCESS:\n      return { ...state,\n        loading: false,\n        addresses: action.payload,\n        success: true,\n        error: \"\"\n      };\n\n    case GET_USER_ALL_ADDRESSES_FAIL:\n      return { ...state,\n        loading: false,\n        addresses: [],\n        success: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}; // get single address reducer\n\nexport const getSingleAddressReducer = (state = {}, action) => {\n  switch (action.type) {\n    case GET_SINGLE_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true,\n        address: {},\n        success: false,\n        error: \"\"\n      };\n\n    case GET_SINGLE_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        address: action.payload,\n        success: true,\n        error: \"\"\n      };\n\n    case GET_SINGLE_ADDRESS_FAIL:\n      return { ...state,\n        loading: false,\n        address: {},\n        success: false,\n        error: action.payload\n      };\n\n    case GET_SINGLE_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        address: {},\n        success: false,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // create user address\n\nexport const createUserAddressReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_USER_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true,\n        address: {},\n        success: false,\n        error: \"\"\n      };\n\n    case CREATE_USER_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        address: action.payload,\n        success: true,\n        error: \"\"\n      };\n\n    case CREATE_USER_ADDRESS_FAIL:\n      return { ...state,\n        loading: false,\n        success: false,\n        address: {},\n        error: action.payload\n      };\n\n    case CREATE_USER_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        success: false,\n        address: {},\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // update user address\n\nexport const updateUserAddressReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_USER_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true,\n        success: false,\n        error: \"\"\n      };\n\n    case UPDATE_USER_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        success: true,\n        error: \"\"\n      };\n\n    case UPDATE_USER_ADDRESS_FAIL:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: action.payload\n      };\n\n    case UPDATE_USER_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // delete user address reducer\n\nexport const deleteUserAddressReducer = (state = {}, action) => {\n  switch (action.type) {\n    case DELETE_USER_ADDRESS_REQUEST:\n      return { ...state,\n        loading: true,\n        success: false,\n        error: \"\"\n      };\n\n    case DELETE_USER_ADDRESS_SUCCESS:\n      return { ...state,\n        loading: false,\n        success: true,\n        error: \"\"\n      };\n\n    case DELETE_USER_ADDRESS_FAIL:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: action.payload\n      };\n\n    case DELETE_USER_ADDRESS_RESET:\n      return { ...state,\n        loading: false,\n        success: false,\n        error: \"\"\n      };\n\n    default:\n      return state;\n  }\n}; // get all orders reducer\n\nexport const getAllOrdersReducer = (state = {\n  orders: []\n}, action) => {\n  switch (action.type) {\n    case GET_ALL_ORDERS_REQUEST:\n      return { ...state,\n        loading: true,\n        orders: [],\n        error: \"\"\n      };\n\n    case GET_ALL_ORDERS_SUCCESS:\n      return { ...state,\n        loading: false,\n        orders: action.payload,\n        error: \"\"\n      };\n\n    case GET_ALL_ORDERS_FAIL:\n      return { ...state,\n        loading: false,\n        orders: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/reducers/userReducers.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","userLoginReducer","state","action","type","loading","userInfo","payload","error","userRegisterReducer","userDetailsReducer","user","userDetailsUpdateReducer","success","deleteUserAccountReducer","checkTokenValidationReducer","valid","getAllAddressesOfUserReducer","addresses","getSingleAddressReducer","address","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders"],"mappings":"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","sourcesContent":["import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
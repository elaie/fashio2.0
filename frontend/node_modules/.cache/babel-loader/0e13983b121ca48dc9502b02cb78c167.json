{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaie\\\\Downloads\\\\FullStack_Ecommerce_App-main\\\\frontend\\\\src\\\\pages\\\\AllAddressesOfUserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap';\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions';\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants';\nimport { useHistory } from 'react-router-dom';\nimport CreateAddressComponent from '../components/CreateAddressComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllAddressesOfUserPage() {\n  _s();\n\n  let history = useHistory(); // check token validation reducer\n\n  const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer);\n  const {\n    error: tokenError\n  } = checkTokenValidationReducer;\n  const dispatch = useDispatch();\n  const [deleteAddress, setDeleteAddress] = useState(\"\");\n  const [createAddress, setCreateAddress] = useState(false); // modal state and functions\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); // login reducer\n\n\n  const userLoginReducer = useSelector(state => state.userLoginReducer);\n  const {\n    userInfo\n  } = userLoginReducer; // get address list reducer\n\n  const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer);\n  const {\n    addresses,\n    loading: loadingAllAddresses\n  } = getAllAddressesOfUserReducer; // get address list reducer\n\n  const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer);\n  const {\n    success: addressDeletionSuccess\n  } = deleteUserAddressReducer;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(checkTokenValidation());\n      dispatch(getAllAddress());\n      dispatch({\n        type: GET_SINGLE_ADDRESS_RESET\n      });\n    }\n  }, [dispatch, history, userInfo, addressDeletionSuccess]);\n\n  if (userInfo && tokenError === \"Request failed with status code 401\") {\n    alert(\"Session expired, please login again.\");\n    dispatch(logout());\n    history.push(\"/login\");\n    window.location.reload();\n  }\n\n  if (addressDeletionSuccess) {\n    alert(\"Address successfully deleted.\");\n    dispatch({\n      type: DELETE_USER_ADDRESS_RESET\n    });\n    dispatch(getAllAddress());\n  } // address deletion handler\n\n\n  const deleteAddressHandler = address => {\n    setDeleteAddress(address);\n    handleShow();\n  }; // address delete confirmation\n\n\n  const confirmDelete = id => {\n    dispatch(deleteUserAddress(id));\n    handleClose();\n  }; // toggle Create Address Button\n\n\n  const toggleCreateAddress = () => {\n    setCreateAddress(!createAddress);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                style: {\n                  color: \"#e6e600\"\n                },\n                className: \"fas fa-exclamation-triangle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), \" \", \"Delete Confirmation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [\"Are you sure you want to delete this address\", \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n              children: [\"\\\"\", deleteAddress.house_no, \", \", deleteAddress.city, \", \", deleteAddress.state, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 34\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => confirmDelete(deleteAddress.id),\n              children: \"Confirm Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), loadingAllAddresses && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Getting addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }, this), createAddress ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CreateAddressComponent, {\n        toggleCreateAddress: toggleCreateAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-primary mb-2 button-focus-css\",\n      onClick: () => toggleCreateAddress(),\n      children: \"Add new address +\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this), addresses && !createAddress ? addresses.map((address, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-2 mb-2\",\n        style: {\n          border: \"1px solid\",\n          borderColor: \"#C6ACE7\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 31\n          }, this), address.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Phone No: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 31\n          }, this), \"+91 \", address.phone_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 31\n          }, this), address.house_no, \", near \", address.landmark, \", \", address.city, \", \", address.state, \",\", address.pin_code, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => deleteAddressHandler(address),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              title: \"delete address\",\n              className: \"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => history.push(`/all-addresses/${address.id}/`),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              title: \"edit address\",\n              className: \"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, address.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this)) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllAddressesOfUserPage, \"fvabGd0i25hxTzsLYhhMJLSJmC8=\", false, function () {\n  return [useHistory, useSelector, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = AllAddressesOfUserPage;\nexport default AllAddressesOfUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllAddressesOfUserPage\");","map":{"version":3,"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/pages/AllAddressesOfUserPage.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Card","Modal","Button","Spinner","deleteUserAddress","getAllAddress","checkTokenValidation","logout","DELETE_USER_ADDRESS_RESET","GET_SINGLE_ADDRESS_RESET","useHistory","CreateAddressComponent","AllAddressesOfUserPage","history","checkTokenValidationReducer","state","error","tokenError","dispatch","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","show","setShow","handleClose","handleShow","userLoginReducer","userInfo","getAllAddressesOfUserReducer","addresses","loading","loadingAllAddresses","deleteUserAddressReducer","success","addressDeletionSuccess","push","type","alert","window","location","reload","deleteAddressHandler","address","confirmDelete","id","toggleCreateAddress","color","house_no","city","display","map","idx","border","borderColor","name","phone_number","landmark","pin_code"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n"]},"metadata":{},"sourceType":"module"}
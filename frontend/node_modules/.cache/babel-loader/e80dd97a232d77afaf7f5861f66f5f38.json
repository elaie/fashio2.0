{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaie\\\\Downloads\\\\FullStack_Ecommerce_App-main\\\\frontend\\\\src\\\\pages\\\\Tweetbox.js\",\n  _s = $RefreshSig$();\n// React Imports\nimport React, { useState } from 'react';\n// Components Imports\nimport TextareaAutosize from 'react-textarea-autosize';\n// Material UI Imports\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\n// Custom Helpers\nimport APIHelper from '../helpers/api';\n// Custom Styling\nimport '../styles/components/Tweetbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tweetbox(_ref) {\n  _s();\n  let {\n    isEditMode,\n    avatar,\n    fetchPosts,\n    initText = '',\n    initImage = '',\n    tweetID = null,\n    handleEditModalClose = null\n  } = _ref;\n  const [tweetMessage, setTweetMessage] = useState(initText);\n  const [tweetImage, setTweetImage] = useState(initImage);\n  const sendTweet = e => {\n    e.preventDefault();\n    if (isEditMode) {\n      // edit mode\n      if (tweetID) {\n        APIHelper.editTweet(tweetID, {\n          text: tweetMessage,\n          image: tweetImage\n        }).then(data => {\n          if (APIHelper.type(data) === \"Object\" && data.error) {\n            return console.error(data.error);\n          }\n          if (handleEditModalClose) handleEditModalClose();\n          fetchPosts();\n          fetchPosts(true);\n        });\n      }\n    } else {\n      // create mode\n      APIHelper.postTweet({\n        text: tweetMessage,\n        image: tweetImage\n      }).then(data => {\n        if (APIHelper.type(data) === \"Object\" && data.error) {\n          return console.error(data.error);\n        }\n        setTweetMessage('');\n        setTweetImage('');\n        fetchPosts();\n        fetchPosts(true);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          className: \"tweetBox__input__textarea\",\n          onChange: e => setTweetMessage(e.target.value),\n          value: tweetMessage,\n          placeholder: \"What's happening?\",\n          type: \"url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setTweetImage(e.target.value),\n        value: tweetImage,\n        className: \"tweetBox__imageInput\",\n        placeholder: \"Optional: Enter image URL\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sendTweet,\n        className: \"tweetBox__tweetButton\",\n        disabled: tweetMessage === '' && tweetImage === '',\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Tweetbox, \"81NfDfbAvPFrOaH8WIxm0pdaUeM=\");\n_c = Tweetbox;\n;\nexport default Tweetbox;\nvar _c;\n$RefreshReg$(_c, \"Tweetbox\");","map":{"version":3,"names":["React","useState","TextareaAutosize","Avatar","Button","APIHelper","Tweetbox","isEditMode","avatar","fetchPosts","initText","initImage","tweetID","handleEditModalClose","tweetMessage","setTweetMessage","tweetImage","setTweetImage","sendTweet","e","preventDefault","editTweet","text","image","then","data","type","error","console","postTweet","target","value"],"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/pages/Tweetbox.js"],"sourcesContent":["// React Imports\r\nimport React, { useState } from 'react';\r\n// Components Imports\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n// Material UI Imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\n// Custom Helpers\r\nimport APIHelper from '../helpers/api';\r\n// Custom Styling\r\nimport '../styles/components/Tweetbox.css';\r\n\r\nfunction Tweetbox({ isEditMode, avatar, fetchPosts, initText='', initImage='', tweetID=null, handleEditModalClose=null }) {\r\n    const [tweetMessage, setTweetMessage] = useState(initText);\r\n    const [tweetImage, setTweetImage] = useState(initImage);\r\n\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n        \r\n        if (isEditMode) {\r\n            // edit mode\r\n            if (tweetID) {\r\n                APIHelper.editTweet(tweetID, {\r\n                    text: tweetMessage,\r\n                    image: tweetImage,\r\n                }).then(data => {\r\n                    if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                        return console.error(data.error);\r\n                    }\r\n                    if (handleEditModalClose) handleEditModalClose();\r\n                    fetchPosts();\r\n                    fetchPosts(true);\r\n                });\r\n            }\r\n        } else {\r\n            // create mode\r\n            APIHelper.postTweet({\r\n                text: tweetMessage,\r\n                image: tweetImage,\r\n            }).then(data => {\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    return console.error(data.error);\r\n                }\r\n                setTweetMessage('');\r\n                setTweetImage('');\r\n                fetchPosts();\r\n                fetchPosts(true);\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tweetBox\">\r\n            <form>\r\n                <div className=\"tweetBox__input\">\r\n                    <Avatar src={avatar} />\r\n                    <TextareaAutosize \r\n                        className=\"tweetBox__input__textarea\"\r\n                        onChange={e => setTweetMessage(e.target.value)}\r\n                        value={tweetMessage} \r\n                        placeholder=\"What's happening?\" \r\n                        type=\"url\"    \r\n                    />\r\n                </div>\r\n                <input \r\n                    onChange={e => setTweetImage(e.target.value)}\r\n                    value={tweetImage}\r\n                    className=\"tweetBox__imageInput\"\r\n                    placeholder=\"Optional: Enter image URL\"\r\n                    type=\"text\" \r\n                />\r\n\r\n                <Button onClick={sendTweet} className=\"tweetBox__tweetButton\" disabled={tweetMessage==='' && tweetImage===''}>Tweet</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tweetbox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
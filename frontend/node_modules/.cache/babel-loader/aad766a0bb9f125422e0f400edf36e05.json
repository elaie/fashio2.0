{"ast":null,"code":"import { POST_LIST_REQUEST, POST_LIST_SUCCESS, POST_LIST_FAIL, POST_DETAILS_REQUEST, POST_DETAILS_SUCCESS, POST_DETAILS_FAIL, CREATE_POST_REQUEST, CREATE_POST_SUCCESS, CREATE_POST_FAIL, DELETE_POST_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAIL, UPDATE_POST_REQUEST, UPDATE_POST_SUCCESS, UPDATE_POST_FAIL } from '../constants/index';\nimport axios from 'axios';\n\n// posts list\nexport const getPostList = () => async dispatch => {\n  try {\n    dispatch({\n      type: POST_LIST_REQUEST\n    });\n\n    // call api\n    const {\n      data\n    } = await axios.get(\"/posts/post/\");\n    dispatch({\n      type: POST_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// posts details\nexport const getPostDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: POST_DETAILS_REQUEST\n    });\n\n    // call api\n    const {\n      data\n    } = await axios.get(`/posts/post/${id}/`);\n    dispatch({\n      type: POST_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\n// create posts\nexport const createPost = posts => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_POST_REQUEST\n    });\n\n    // login reducer\n    const {\n      userLoginReducer: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    // api call\n    const {\n      data\n    } = await axios.post(\"/posts/post-create/\", posts, config);\n    dispatch({\n      type: CREATE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_POST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// delete posts\nexport const deletePost = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: DELETE_POST_REQUEST\n    });\n\n    // login reducer\n    const {\n      userLoginReducer: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    // api call\n    const {\n      data\n    } = await axios.delete(`/posts/post-delete/${id}/`, config);\n    dispatch({\n      type: DELETE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_POST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\n\n// update posts\nexport const updatePost = (id, posts) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UPDATE_POST_REQUEST\n    });\n\n    // login reducer\n    const {\n      userLoginReducer: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n\n    // api call\n    const {\n      data\n    } = await axios.put(`/api/posts-update/${id}/`, posts, config);\n    dispatch({\n      type: UPDATE_POST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_POST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","CREATE_POST_REQUEST","CREATE_POST_SUCCESS","CREATE_POST_FAIL","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAIL","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","axios","getPostList","dispatch","type","data","get","payload","error","message","getPostDetails","id","createPost","posts","getState","userLoginReducer","userInfo","config","headers","Authorization","token","post","response","detail","deletePost","delete","updatePost","put"],"sources":["C:/Users/elaie/Downloads/FullStack_Ecommerce_App-main/frontend/src/actions/postActions.js"],"sourcesContent":["import {\r\n    POST_LIST_REQUEST,\r\n    POST_LIST_SUCCESS,\r\n    POST_LIST_FAIL,\r\n\r\n    POST_DETAILS_REQUEST,\r\n    POST_DETAILS_SUCCESS,\r\n    POST_DETAILS_FAIL,\r\n\r\n    CREATE_POST_REQUEST,\r\n    CREATE_POST_SUCCESS,\r\n    CREATE_POST_FAIL,\r\n\r\n    DELETE_POST_REQUEST,\r\n    DELETE_POST_SUCCESS,\r\n    DELETE_POST_FAIL,\r\n\r\n    UPDATE_POST_REQUEST,\r\n    UPDATE_POST_SUCCESS,\r\n    UPDATE_POST_FAIL,\r\n} from '../constants/index'\r\n\r\nimport axios from 'axios'\r\n\r\n// posts list\r\nexport const getPostList = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_LIST_REQUEST\r\n        })\r\n\r\n        // call api\r\n        const { data } = await axios.get(\"/posts/post/\")\r\n\r\n        dispatch({\r\n            type: POST_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIST_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// posts details\r\nexport const getPostDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: POST_DETAILS_REQUEST\r\n        })\r\n\r\n        // call api\r\n        const { data } = await axios.get(`/posts/post/${id}/`)\r\n\r\n        dispatch({\r\n            type: POST_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_DETAILS_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// create posts\r\nexport const createPost = (posts) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: CREATE_POST_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.post(\r\n            \"/posts/post-create/\",\r\n            posts,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: CREATE_POST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_POST_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// delete posts\r\nexport const deletePost = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_POST_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.delete(\r\n            `/posts/post-delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELETE_POST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_POST_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// update posts\r\nexport const updatePost = (id, posts) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_POST_REQUEST\r\n        })\r\n\r\n        // login reducer\r\n        const {\r\n            userLoginReducer: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        // api call\r\n        const { data } = await axios.put(\r\n            `/api/posts-update/${id}/`,\r\n            posts,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_POST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_POST_FAIL,\r\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
[{"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\index.js":"1","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\store.js":"2","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\App.js":"3","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\index.js":"4","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LoginPage.js":"5","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\RegisterPage.js":"6","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductsListPage.js":"7","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductDetailsPage.js":"8","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountPage.js":"9","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CheckoutPage.js":"10","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\DeleteUserAccountPage.js":"11","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardDetailsPage.js":"12","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardUpdatePage.js":"13","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountUpdatePage.js":"14","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AllAddressesOfUserPage.js":"15","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\OrdersListPage.js":"16","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\NotFoundPage.js":"17","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductCreatePage.js":"18","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AddressUpdatePage.js":"19","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Navbar.js":"20","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductUpdatePage.js":"21","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\PaymentStatus.js":"22","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\cardReducers.js":"24","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\productReducers.js":"25","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Message.js":"26","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Product.js":"27","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\UserAddressComponent.js":"28","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\ChargeCardComponent.js":"29","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateCardComponent.js":"30","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForOrdersPage.js":"31","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForProducts.js":"32","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\GetDate.js":"33","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateAddressComponent.js":"34","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\constants\\index.js":"35","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\userActions.js":"36","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\productActions.js":"37","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\cardActions.js":"38","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\DeleteCardComponent.js":"39","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\homePage.js":"40","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\UserProfile.js":"41"},{"size":282,"mtime":1676303240977,"results":"42","hashOfConfig":"43"},{"size":540,"mtime":1676303241002,"results":"44","hashOfConfig":"43"},{"size":2871,"mtime":1676743525462,"results":"45","hashOfConfig":"43"},{"size":1493,"mtime":1676303241860,"results":"46","hashOfConfig":"43"},{"size":2805,"mtime":1676556693076,"results":"47","hashOfConfig":"43"},{"size":4511,"mtime":1676303241807,"results":"48","hashOfConfig":"43"},{"size":8097,"mtime":1676725964630,"results":"49","hashOfConfig":"43"},{"size":5726,"mtime":1676622852489,"results":"50","hashOfConfig":"43"},{"size":3708,"mtime":1676722835149,"results":"51","hashOfConfig":"43"},{"size":6156,"mtime":1676722835149,"results":"52","hashOfConfig":"43"},{"size":3001,"mtime":1676722835148,"results":"53","hashOfConfig":"43"},{"size":6452,"mtime":1676722835149,"results":"54","hashOfConfig":"43"},{"size":11003,"mtime":1676722835149,"results":"55","hashOfConfig":"43"},{"size":7136,"mtime":1676722835149,"results":"56","hashOfConfig":"43"},{"size":6835,"mtime":1676722835149,"results":"57","hashOfConfig":"43"},{"size":8314,"mtime":1676722835145,"results":"58","hashOfConfig":"43"},{"size":268,"mtime":1676303241663,"results":"59","hashOfConfig":"43"},{"size":5972,"mtime":1676722835179,"results":"60","hashOfConfig":"43"},{"size":8562,"mtime":1676722835149,"results":"61","hashOfConfig":"43"},{"size":4306,"mtime":1676743560544,"results":"62","hashOfConfig":"43"},{"size":12763,"mtime":1676722835145,"results":"63","hashOfConfig":"43"},{"size":1179,"mtime":1676303241281,"results":"64","hashOfConfig":"43"},{"size":11978,"mtime":1676303241911,"results":"65","hashOfConfig":"43"},{"size":5000,"mtime":1676303241837,"results":"66","hashOfConfig":"43"},{"size":6231,"mtime":1676303241885,"results":"67","hashOfConfig":"43"},{"size":228,"mtime":1676303241232,"results":"68","hashOfConfig":"43"},{"size":869,"mtime":1676619429711,"results":"69","hashOfConfig":"43"},{"size":2076,"mtime":1676722835169,"results":"70","hashOfConfig":"43"},{"size":4522,"mtime":1676722835145,"results":"71","hashOfConfig":"43"},{"size":13231,"mtime":1676722835171,"results":"72","hashOfConfig":"43"},{"size":1100,"mtime":1676303241328,"results":"73","hashOfConfig":"43"},{"size":1224,"mtime":1676722835170,"results":"74","hashOfConfig":"43"},{"size":1127,"mtime":1676303241207,"results":"75","hashOfConfig":"43"},{"size":7280,"mtime":1676303241135,"results":"76","hashOfConfig":"43"},{"size":5942,"mtime":1676303241410,"results":"77","hashOfConfig":"43"},{"size":12480,"mtime":1676558639256,"results":"78","hashOfConfig":"43"},{"size":5313,"mtime":1676303241056,"results":"79","hashOfConfig":"43"},{"size":5330,"mtime":1676303241030,"results":"80","hashOfConfig":"43"},{"size":1986,"mtime":1676303241183,"results":"81","hashOfConfig":"43"},{"size":176,"mtime":1676723003658,"results":"82","hashOfConfig":"43"},{"size":158,"mtime":1676743543173,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"sloakk",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\index.js",[],["170","171"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\store.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\App.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LoginPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\RegisterPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductsListPage.js",["172","173","174","175"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductsList } from '../actions/productActions';\r\nimport Message from '../components/Message';\r\nimport { Spinner, Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CREATE_PRODUCT_RESET } from '../constants';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { createProduct } from \"../actions/productActions\";\r\nimport { checkTokenValidation, logout } from \"../actions/userActions\";\r\nimport stockImg from \"./img-not-found.jpg\";\r\n\r\n\r\nfunction ProductsListPage() {\r\n\r\n    let history = useHistory()\r\n    let searchTerm = history.location.search\r\n    const dispatch = useDispatch()\r\n\r\n    // products list reducer\r\n    const productsListReducer = useSelector(state => state.productsListReducer)\r\n    const { loading, error, products } = productsListReducer\r\n\r\n\r\n\r\n    const [product_from, setProduct_from] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"100\");\r\n    const [stock, setStock] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const [image2, setImage2] = useState(stockImg);\r\n    const [image3, setImage3] = useState(stockImg);\r\n  \r\n    // login reducer\r\n    const userLoginReducer = useSelector((state) => state.userLoginReducer);\r\n    const { userInfo } = userLoginReducer;\r\n  \r\n    // create product reducer\r\n    const createProductReducer = useSelector(\r\n      (state) => state.createProductReducer\r\n    );\r\n    const {\r\n      product,\r\n      success: productCreationSuccess,\r\n      error: productCreationError,\r\n    } = createProductReducer;\r\n  \r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(\r\n      (state) => state.checkTokenValidationReducer\r\n    );\r\n    const { error: tokenError } = checkTokenValidationReducer;\r\n  \r\n    useEffect(() => {\r\n      if (!userInfo) {\r\n        history.push(\"/login\");\r\n      }\r\n      dispatch(checkTokenValidation());\r\n    }, [dispatch, userInfo, history]);\r\n  \r\n    const onSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      let form_data = new FormData();\r\n      form_data.append(\"product_from\", product_from);\r\n      form_data.append(\"name\", name);\r\n      form_data.append(\"description\", description);\r\n      form_data.append(\"price\", price);\r\n      form_data.append(\"stock\", stock);\r\n      form_data.append(\"image\", image);\r\n      form_data.append(\"image2\", image2);\r\n      form_data.append(\"image3\", image3);\r\n  \r\n      dispatch(createProduct(form_data));\r\n    };\r\n  \r\n    if (productCreationSuccess) {\r\n      alert(\"Product successfully created.\");\r\n      history.push(`/product/${product.id}/`);\r\n      dispatch({\r\n        type: CREATE_PRODUCT_RESET,\r\n      });\r\n    }\r\n  \r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n      alert(\"Session expired, please login again.\");\r\n      dispatch(logout());\r\n      history.push(\"/login\");\r\n      window.location.reload();\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsList())\r\n        dispatch({\r\n            type: CREATE_PRODUCT_RESET\r\n        })\r\n        //dispatch(checkTokenValidation())\r\n    }, [dispatch])\r\n\r\n    const showNothingMessage = () => {\r\n        return (\r\n            <div>\r\n                {!loading ? <Message variant='info'>Nothing to show</Message> : \"\"}                \r\n            </div>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Products</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            <div>\r\n                \r\n            <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>\r\n            <b>Product Name</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            autoFocus={true}\r\n            type=\"text\"\r\n            value={name}\r\n            placeholder=\"product name\"\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              setProduct_from(userInfo.username);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>\r\n            <b>Product Description</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            value={description}\r\n            placeholder=\"product description\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>\r\n            <b>Price</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\r\n            value={price}\r\n            placeholder=\"199.99\"\r\n            step=\"0.01\"\r\n            maxLength=\"8\"\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <span style={{ display: \"flex\" }}>\r\n          <label>In Stock</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={stock}\r\n            className=\"ml-2 mt-2\"\r\n            onChange={() => setStock(!stock)}\r\n          />\r\n        </span>\r\n\r\n        <Form.Group controlId=\"image\">\r\n          <Form.Label>\r\n            <b>Product Image</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"file\"\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n            }}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image2\">\r\n          <Form.Label>\r\n            <b>Product Image</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"file\"\r\n            onChange={(e) => setImage2(e.target.files[0])}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image3\">\r\n          <Form.Label>\r\n            <b>Product Image</b>\r\n          </Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"file\"\r\n            onChange={(e) => setImage3(e.target.files[0])}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n          className=\"btn-sm button-focus-css\"\r\n        >\r\n          Save Product\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"primary\"\r\n          className=\"btn-sm ml-2 button-focus-css\"\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n            \r\n                <Row>\r\n\r\n                    {/* If length of the filter result is equal to 0 then show 'nothing found' message\r\n                        with help of showNothingMessage function else show the filtered result on the\r\n                        webpage and then run the map function */}\r\n                    \r\n                    {(products.filter((item) =>\r\n                        item.product_from == userInfo.username\r\n                    )).length === 0 ? showNothingMessage() : \r\n                    \r\n                    (products.filter((item) =>\r\n                    item.product_from == userInfo.username\r\n                    )).map((product, idx) => (\r\n                        <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n                            <div className=\"mx-2\"> \r\n                                <Product product={product} />\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                    )}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsListPage\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductDetailsPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CheckoutPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\DeleteUserAccountPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardDetailsPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AllAddressesOfUserPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\OrdersListPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductCreatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AddressUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductUpdatePage.js",["176","177"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, CardColumns, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { getProductDetails, updateProduct } from '../actions/productActions'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../constants'\r\nimport Message from '../components/Message'\r\nimport stockImg from \"./img-not-found.jpg\";\r\n\r\nconst ProductUpdatePage = ({ match }) => {\r\n\r\n    // product details reducer\r\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\r\n    const { loading: loadingPageDetails, product } = productDetailsReducer\r\n\r\n    // as our errors will be displayed at the top of the webpage\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    const [product_from, setProduct_from] = useState(\"\");\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [stock, setStock] = useState(product.stock)\r\n    const [image, setImage] = useState(\"\")\r\n    const [image2, setImage2] = useState(\"\");\r\n    const [image3, setImage3] = useState(\"\");\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [newImage, setNewImage] = useState(false)\r\n    const [newImage2, setNewImage2] = useState(false)\r\n    const [newImage3, setNewImage3] = useState(false)\r\n    \r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // product details reducer\r\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\r\n    const {\r\n        success: productUpdationSuccess,\r\n        loading: loadingProductUpdations,\r\n        error: productUpdationError\r\n    } = updateProductReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n    \r\n    // get product details\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.admin) {\r\n            history.push(\"/login\")\r\n        }\r\n        dispatch(checkTokenValidation())\r\n        dispatch(getProductDetails(match.params.id))\r\n    }, [dispatch, userInfo, history, match])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const productId = product.id\r\n        let form_data = new FormData()\r\n        form_data.append(\"product_from\",product_from);\r\n        form_data.append(\"name\", name);\r\n        form_data.append(\"description\", description);\r\n        form_data.append(\"price\", price);\r\n        form_data.append(\"stock\", stock);\r\n        form_data.append(\"image\", image);\r\n        form_data.append(\"image2\", image2);\r\n        form_data.append(\"image3\", image3);\r\n\r\n        dispatch(updateProduct(productId, form_data))\r\n    }\r\n\r\n    if (productUpdationSuccess) {\r\n        alert(\"Product successfully updated.\")\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_RESET\r\n        })\r\n        history.push(`/product/${product.id}`)\r\n    }\r\n\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span\r\n                className=\"d-flex justify-content-center text-info\"\r\n            >\r\n                <em>Edit Product</em>\r\n            </span>\r\n            {productUpdationError ? (\r\n                <div>\r\n                    {scrollToTop()}\r\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\r\n                </div>\r\n            ) : \"\"}\r\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Product Details</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\r\n                <h5>Updating Product</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span> : \"\"}\r\n            <Form onSubmit={onSubmit}>\r\n               <CardColumns>\r\n               \r\n               <Form.Group controlId='image'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage(!newImage)\r\n                                    setImage(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage(!newImage)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image2'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image2} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage2 ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage2(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage2(!newImage)\r\n                                    setImage2(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage2(!newImage2)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image3'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image3} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage3 ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage3(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage3(!newImage3)\r\n                                    setImage3(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage3(!newImage3)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n               </CardColumns>\r\n               \r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Name\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        autoFocus={true}\r\n                        type=\"text\"\r\n                        defaultValue={product.name}\r\n                        placeholder=\"product name\"\r\n                        onChange={(e) => {\r\n                            setName(e.target.value)\r\n                            setProduct_from(userInfo.username)\r\n                        }}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Description\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        defaultValue={product.description}\r\n                        placeholder=\"product description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Price\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\r\n                        defaultValue={product.price}\r\n                        placeholder=\"199.99\"\r\n                        step=\"0.01\"\r\n                        maxLength=\"8\"\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <span style={{ display: \"flex\" }}>\r\n                    <label>In Stock</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        defaultChecked={product.stock}\r\n                        className=\"ml-2 mt-2\"\r\n                        onChange={() => setStock(!stock)}\r\n                    />\r\n                </span>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='success'\r\n                    className=\"btn-sm button-focus-css mb-4\"\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n                <Button\r\n                    onClick={() => history.push(`/product/${product.id}`)}\r\n                    variant='primary'\r\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdatePage\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\PaymentStatus.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\cardReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Message.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Product.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\UserAddressComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\ChargeCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForOrdersPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForProducts.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\GetDate.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateAddressComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\constants\\index.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\cardActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\DeleteCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\homePage.js",["178","179"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction homePage() {\r\n   \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default homePage","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\UserProfile.js",[],{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":18,"column":9,"nodeType":"186","messageId":"187","endLine":18,"endColumn":19},{"ruleId":"184","severity":1,"message":"188","line":47,"column":14,"nodeType":"186","messageId":"187","endLine":47,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":239,"column":43,"nodeType":"191","messageId":"192","endLine":239,"endColumn":45},{"ruleId":"189","severity":1,"message":"190","line":243,"column":39,"nodeType":"191","messageId":"192","endLine":243,"endColumn":41},{"ruleId":"184","severity":1,"message":"193","line":2,"column":37,"nodeType":"186","messageId":"187","endLine":2,"endColumn":40},{"ruleId":"184","severity":1,"message":"194","line":10,"column":8,"nodeType":"186","messageId":"187","endLine":10,"endColumn":16},{"ruleId":"184","severity":1,"message":"195","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"196","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'searchTerm' is assigned a value but never used.","Identifier","unusedVar","'productCreationError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Row' is defined but never used.","'stockImg' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]
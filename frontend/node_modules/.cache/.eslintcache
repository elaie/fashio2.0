[{"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\index.js":"1","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\store.js":"2","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\App.js":"3","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\index.js":"4","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LoginPage.js":"5","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\RegisterPage.js":"6","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductsListPage.js":"7","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductDetailsPage.js":"8","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountPage.js":"9","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CheckoutPage.js":"10","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\DeleteUserAccountPage.js":"11","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardDetailsPage.js":"12","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardUpdatePage.js":"13","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountUpdatePage.js":"14","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AllAddressesOfUserPage.js":"15","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\OrdersListPage.js":"16","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\NotFoundPage.js":"17","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductCreatePage.js":"18","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AddressUpdatePage.js":"19","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Navbar.js":"20","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductUpdatePage.js":"21","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\PaymentStatus.js":"22","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\cardReducers.js":"24","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\productReducers.js":"25","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Message.js":"26","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Product.js":"27","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\UserAddressComponent.js":"28","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\ChargeCardComponent.js":"29","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateCardComponent.js":"30","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForOrdersPage.js":"31","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForProducts.js":"32","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\GetDate.js":"33","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateAddressComponent.js":"34","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\constants\\index.js":"35","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\userActions.js":"36","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\productActions.js":"37","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\cardActions.js":"38","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\DeleteCardComponent.js":"39","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\homePage.js":"40","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\UserProfile.js":"41","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProfileTweets.js":"42","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\helpers\\api.js":"43","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\helpers\\math.js":"44","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\HeadingCard.js":"45","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\TweetPagination.js":"46","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Post.js":"47","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LikeButton.js":"48","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\MoreButton.js":"49","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Tweetbox.js":"50","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Feed.js":"51","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\FeedTweets.js":"52","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Profile.js":"53"},{"size":282,"mtime":1676303240977,"results":"54","hashOfConfig":"55"},{"size":540,"mtime":1676303241002,"results":"56","hashOfConfig":"55"},{"size":3463,"mtime":1676881403525,"results":"57","hashOfConfig":"55"},{"size":1493,"mtime":1676303241860,"results":"58","hashOfConfig":"55"},{"size":2805,"mtime":1676556693076,"results":"59","hashOfConfig":"55"},{"size":4511,"mtime":1676303241807,"results":"60","hashOfConfig":"55"},{"size":8124,"mtime":1676887231105,"results":"61","hashOfConfig":"55"},{"size":5726,"mtime":1676622852489,"results":"62","hashOfConfig":"55"},{"size":3688,"mtime":1676879597089,"results":"63","hashOfConfig":"55"},{"size":6156,"mtime":1676722835149,"results":"64","hashOfConfig":"55"},{"size":3001,"mtime":1676722835148,"results":"65","hashOfConfig":"55"},{"size":6452,"mtime":1676722835149,"results":"66","hashOfConfig":"55"},{"size":11003,"mtime":1676722835149,"results":"67","hashOfConfig":"55"},{"size":7136,"mtime":1676722835149,"results":"68","hashOfConfig":"55"},{"size":6835,"mtime":1676722835149,"results":"69","hashOfConfig":"55"},{"size":8314,"mtime":1676722835145,"results":"70","hashOfConfig":"55"},{"size":268,"mtime":1676303241663,"results":"71","hashOfConfig":"55"},{"size":5972,"mtime":1676722835179,"results":"72","hashOfConfig":"55"},{"size":8562,"mtime":1676722835149,"results":"73","hashOfConfig":"55"},{"size":4306,"mtime":1676816329568,"results":"74","hashOfConfig":"55"},{"size":12763,"mtime":1676722835145,"results":"75","hashOfConfig":"55"},{"size":1179,"mtime":1676303241281,"results":"76","hashOfConfig":"55"},{"size":11978,"mtime":1676303241911,"results":"77","hashOfConfig":"55"},{"size":5000,"mtime":1676303241837,"results":"78","hashOfConfig":"55"},{"size":6231,"mtime":1676303241885,"results":"79","hashOfConfig":"55"},{"size":228,"mtime":1676303241232,"results":"80","hashOfConfig":"55"},{"size":869,"mtime":1676619429711,"results":"81","hashOfConfig":"55"},{"size":2076,"mtime":1676722835169,"results":"82","hashOfConfig":"55"},{"size":4522,"mtime":1676722835145,"results":"83","hashOfConfig":"55"},{"size":13231,"mtime":1676722835171,"results":"84","hashOfConfig":"55"},{"size":1100,"mtime":1676303241328,"results":"85","hashOfConfig":"55"},{"size":1224,"mtime":1676722835170,"results":"86","hashOfConfig":"55"},{"size":1127,"mtime":1676303241207,"results":"87","hashOfConfig":"55"},{"size":7280,"mtime":1676303241135,"results":"88","hashOfConfig":"55"},{"size":6118,"mtime":1676883677864,"results":"89","hashOfConfig":"55"},{"size":12480,"mtime":1676882460283,"results":"90","hashOfConfig":"55"},{"size":5544,"mtime":1676889627993,"results":"91","hashOfConfig":"55"},{"size":5330,"mtime":1676303241030,"results":"92","hashOfConfig":"55"},{"size":1986,"mtime":1676303241183,"results":"93","hashOfConfig":"55"},{"size":176,"mtime":1676723003658,"results":"94","hashOfConfig":"55"},{"size":23642,"mtime":1676830900542,"results":"95","hashOfConfig":"55"},{"size":9588,"mtime":1676797810006,"results":"96","hashOfConfig":"55"},{"size":9134,"mtime":1676891167403,"results":"97","hashOfConfig":"55"},{"size":645,"mtime":1676797810009,"results":"98","hashOfConfig":"55"},{"size":331,"mtime":1676819484017,"results":"99","hashOfConfig":"55"},{"size":958,"mtime":1676797810007,"results":"100","hashOfConfig":"55"},{"size":3858,"mtime":1676797810005,"results":"101","hashOfConfig":"55"},{"size":1537,"mtime":1676797810005,"results":"102","hashOfConfig":"55"},{"size":7751,"mtime":1676797810005,"results":"103","hashOfConfig":"55"},{"size":2859,"mtime":1676797810008,"results":"104","hashOfConfig":"55"},{"size":3245,"mtime":1676888676851,"results":"105","hashOfConfig":"55"},{"size":7132,"mtime":1676797810004,"results":"106","hashOfConfig":"55"},{"size":23635,"mtime":1676878734595,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"sloakk",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"110"},"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\index.js",[],["224","225"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\store.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\App.js",["226","227","228"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LoginPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\RegisterPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductsListPage.js",["229","230","231","232"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductDetailsPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountPage.js",["233"],"import React, { useEffect } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\r\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\r\nimport Message from '../components/Message'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nfunction AccountPage() {\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n\r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // user details reducer\r\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\r\n    const { user: userAccDetails, loading } = userDetailsReducer\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push(\"/login\")\r\n        } else {\r\n            try {\r\n                dispatch(checkTokenValidation())\r\n                dispatch(userDetails(userInfo.id))\r\n            } catch (error) {\r\n                history.push(\"/\")\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch])\r\n\r\n    // logout\r\n    const logoutHandler = () => {\r\n        dispatch(logout()) // action\r\n    }\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n      }\r\n\r\n    const renderData = () => {\r\n        try {\r\n\r\n            return (\r\n                <div>\r\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Getting User Information</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}\r\n                    <Container>\r\n                        <Row className=\"mr-6 mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\r\n                            <Col className=\"p-3\">{userInfo.username}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\r\n                            <Col className=\"p-3\">{userInfo.email}</Col>\r\n                        </Row>\r\n                        <Row className=\"mb-2 border border-dark\">\r\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\r\n                            <Col className=\"p-3\">{userInfo.admin ? \"Yes\" : \"No\"}</Col>\r\n                        </Row>\r\n                    </Container>\r\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Link to={`/account/update`}>Update Account details</Link>\r\n                        <span className=\"ml-1 text-primary\">| </span>\r\n                        <span className=\"ml-1\"></span>\r\n\r\n                        <Link to={`/account/delete/`}>Delete Account</Link>\r\n                    </span>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return <Message variant='danger'>Something went wrong, go back to <Link\r\n                onClick={logoutHandler} to={`/login`}\r\n            > Login</Link> page.</Message>\r\n        }\r\n    }\r\n\r\n\r\n    return renderData()\r\n\r\n}\r\n\r\nexport default AccountPage\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CheckoutPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\DeleteUserAccountPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardDetailsPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\CardUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AccountUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AllAddressesOfUserPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\OrdersListPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductCreatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\AddressUpdatePage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProductUpdatePage.js",["234","235"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, CardColumns, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { getProductDetails, updateProduct } from '../actions/productActions'\r\nimport { checkTokenValidation, logout } from '../actions/userActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../constants'\r\nimport Message from '../components/Message'\r\nimport stockImg from \"./img-not-found.jpg\";\r\n\r\nconst ProductUpdatePage = ({ match }) => {\r\n\r\n    // product details reducer\r\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\r\n    const { loading: loadingPageDetails, product } = productDetailsReducer\r\n\r\n    // as our errors will be displayed at the top of the webpage\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    const [product_from, setProduct_from] = useState(\"\");\r\n    const [name, setName] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [stock, setStock] = useState(product.stock)\r\n    const [image, setImage] = useState(\"\")\r\n    const [image2, setImage2] = useState(\"\");\r\n    const [image3, setImage3] = useState(\"\");\r\n\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [newImage, setNewImage] = useState(false)\r\n    const [newImage2, setNewImage2] = useState(false)\r\n    const [newImage3, setNewImage3] = useState(false)\r\n    \r\n    // login reducer\r\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\r\n    const { userInfo } = userLoginReducer\r\n\r\n    // product details reducer\r\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\r\n    const {\r\n        success: productUpdationSuccess,\r\n        loading: loadingProductUpdations,\r\n        error: productUpdationError\r\n    } = updateProductReducer\r\n\r\n    // check token validation reducer\r\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\r\n    const { error: tokenError } = checkTokenValidationReducer\r\n    \r\n    // get product details\r\n    useEffect(() => {\r\n        if (!userInfo || !userInfo.admin) {\r\n            history.push(\"/login\")\r\n        }\r\n        dispatch(checkTokenValidation())\r\n        dispatch(getProductDetails(match.params.id))\r\n    }, [dispatch, userInfo, history, match])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const productId = product.id\r\n        let form_data = new FormData()\r\n        form_data.append(\"product_from\",product_from);\r\n        form_data.append(\"name\", name);\r\n        form_data.append(\"description\", description);\r\n        form_data.append(\"price\", price);\r\n        form_data.append(\"stock\", stock);\r\n        form_data.append(\"image\", image);\r\n        form_data.append(\"image2\", image2);\r\n        form_data.append(\"image3\", image3);\r\n\r\n        dispatch(updateProduct(productId, form_data))\r\n    }\r\n\r\n    if (productUpdationSuccess) {\r\n        alert(\"Product successfully updated.\")\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_RESET\r\n        })\r\n        history.push(`/product/${product.id}`)\r\n    }\r\n\r\n\r\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\r\n        alert(\"Session expired, please login again.\")\r\n        dispatch(logout())\r\n        history.push(\"/login\")\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span\r\n                className=\"d-flex justify-content-center text-info\"\r\n            >\r\n                <em>Edit Product</em>\r\n            </span>\r\n            {productUpdationError ? (\r\n                <div>\r\n                    {scrollToTop()}\r\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\r\n                </div>\r\n            ) : \"\"}\r\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\r\n                <h5>Getting Product Details</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span>}\r\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\r\n                <h5>Updating Product</h5>\r\n                <span className=\"ml-2\">\r\n                    <Spinner animation=\"border\" />\r\n                </span>\r\n            </span> : \"\"}\r\n            <Form onSubmit={onSubmit}>\r\n               <CardColumns>\r\n               \r\n               <Form.Group controlId='image'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage(!newImage)\r\n                                    setImage(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage(!newImage)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image2'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image2} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage2 ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage2(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage2(!newImage)\r\n                                    setImage2(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage2(!newImage2)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='image3'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Image\r\n                        </b>\r\n                    </Form.Label>\r\n                    <p>\r\n                        <img src={product.image3} alt={product.name} height=\"200\" />\r\n                    </p>\r\n\r\n                    {newImage3 ?\r\n                        <div>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                onChange={(e) => setImage3(e.target.files[0])}\r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    setNewImage3(!newImage3)\r\n                                    setImage3(\"\")\r\n                                    dispatch({\r\n                                        type: UPDATE_PRODUCT_RESET\r\n                                    })\r\n                                }}\r\n                                className=\"btn btn-primary btn-sm mt-2\"\r\n                            >\r\n                                Cancel\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <p>\r\n                            <span\r\n                                onClick={() => setNewImage3(!newImage3)}\r\n                                className=\"btn btn-success btn-sm\"\r\n                            >\r\n                                choose different image\r\n                            </span>\r\n                        </p>\r\n                    }\r\n                </Form.Group>\r\n               </CardColumns>\r\n               \r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Name\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        autoFocus={true}\r\n                        type=\"text\"\r\n                        defaultValue={product.name}\r\n                        placeholder=\"product name\"\r\n                        onChange={(e) => {\r\n                            setName(e.target.value)\r\n                            setProduct_from(userInfo.username)\r\n                        }}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='description'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Product Description\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        defaultValue={product.description}\r\n                        placeholder=\"product description\"\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>\r\n                        <b>\r\n                            Price\r\n                        </b>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\r\n                        defaultValue={product.price}\r\n                        placeholder=\"199.99\"\r\n                        step=\"0.01\"\r\n                        maxLength=\"8\"\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <span style={{ display: \"flex\" }}>\r\n                    <label>In Stock</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        defaultChecked={product.stock}\r\n                        className=\"ml-2 mt-2\"\r\n                        onChange={() => setStock(!stock)}\r\n                    />\r\n                </span>\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant='success'\r\n                    className=\"btn-sm button-focus-css mb-4\"\r\n                >\r\n                    Save Changes\r\n                </Button>\r\n                <Button\r\n                    onClick={() => history.push(`/product/${product.id}`)}\r\n                    variant='primary'\r\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductUpdatePage\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\PaymentStatus.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\cardReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Message.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\Product.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\UserAddressComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\ChargeCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForOrdersPage.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\SearchBarForProducts.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\GetDate.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\CreateAddressComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\constants\\index.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\actions\\cardActions.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\components\\DeleteCardComponent.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\homePage.js",["236","237"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction homePage() {\r\n   \r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default homePage","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\UserProfile.js",["238","239","240","241","242","243","244","245","246","247","248","249"],"// React Imports\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n// Internal Imports\r\nimport moment from 'moment-timezone';\r\nimport MomentUtils from '@date-io/moment';\r\n// Material UI Imports\r\n//// Core\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//// Pickers\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n//// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Custom Components\r\nimport ProfileTweets from './ProfileTweets'\r\nimport HeadingCard from './HeadingCard';\r\n// Custom Helpers\r\nimport APIHelper from '../helpers/api';\r\nimport MathHelper from '../helpers/math';\r\n// Custom Styling\r\nimport '../styles/components/Profile.css';\r\n\r\nfunction UserProfile({ user, classes }) {\r\n    let history = useHistory()\r\n    const {username} = useParams();\r\n    const [profileUser, setProfileUser] = useState({});\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [editBirthDate, setEditBirthDate] = useState(null);\r\n    const [unfollowModalOpen, setUnfollowModalOpen] = useState(false);\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n    /** Pagination */\r\n    const [tweets_currentPage, tweets_setCurrentPage] = useState(0);\r\n    const [media_currentPage, media_setCurrentPage] = useState(0);\r\n    const [likes_currentPage, likes_setCurrentPage] = useState(0);\r\n    useEffect(() => {\r\n        loadUserProfile();\r\n    }, [tweets_currentPage, media_currentPage, likes_currentPage]);\r\n\r\n    const loadUserFollowed = (userId) => {\r\n        APIHelper.isUserFollowedByMe(userId)\r\n            .then(data => {\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    console.error(data.error);\r\n                }\r\n                setIsFollowing(data);\r\n            });\r\n    };\r\n\r\n    const loadUserProfile = () => {\r\n        APIHelper.getUserInfoByUsername(username, {\r\n            tweets_page: tweets_currentPage + 1, \r\n            media_page: media_currentPage + 1, \r\n            likes_page: likes_currentPage + 1\r\n        }).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                console.error(data.error);\r\n            }\r\n            setProfileUser(data);\r\n            if (profileUser.birth_date) {\r\n                setEditBirthDate(moment(profileUser.birth_date));\r\n            }\r\n            loadUserFollowed(profileUser.id);\r\n        });\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        const top = e.target.scrollTop === 0;\r\n        if (top) {\r\n            loadUserProfile(); // only fetch when scroll to the top of feeds\r\n        }\r\n    };\r\n\r\n    useEffect(() =>{ // componentWillMount\r\n        loadUserProfile();\r\n    }, []);\r\n\r\n    const goBack = () => {\r\n        history.push(-1);\r\n    };\r\n\r\n    {/** Edit Button Dialog */}\r\n    const handleClickEditModalOpen = () => {\r\n        setEditModalOpen(true);\r\n    };\r\n    const handleEditModalClose = () => {\r\n        setEditModalOpen(false);\r\n        setEditBirthDate(profileUser.birth_date ? moment(profileUser.birth_date) : null);\r\n    };\r\n\r\n    {/** Edit Birth Date Field */}\r\n    const handleEditBirthDateChange = (date) => {\r\n        setEditBirthDate(date ? moment(date) : null);\r\n    };\r\n\r\n    {/** Edit Form Submission */}\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const dataObj = Object.fromEntries(data.entries());\r\n        if (dataObj.birth_date) {\r\n            dataObj.birth_date = moment(dataObj.birth_date).format(\"YYYY-MM-DD\");\r\n        }\r\n        if (dataObj.birth_date === '') {\r\n            delete dataObj.birth_date;\r\n        }\r\n        APIHelper.updateUserInfo(dataObj).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                return console.error(data.error);\r\n            }\r\n            handleEditModalClose(); // close modal\r\n            loadUserProfile();\r\n        });\r\n    };\r\n\r\n    {/** Handle Follow/Unfollow button */}\r\n    const handleClickFollow = () => {\r\n        APIHelper.followUser(profileUser.id).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                return console.error(data.error);\r\n            }\r\n            // setIsFollowing(true);\r\n            loadUserFollowed(profileUser.id);\r\n        });\r\n    };\r\n    \r\n    {/** Unfollow Button Dialog */}\r\n    const handleClickUnfollowModalOpen = () => {\r\n        setUnfollowModalOpen(true);\r\n    };\r\n    const handleUnfollowModalClose = () => {\r\n        setUnfollowModalOpen(false);\r\n    };\r\n    const handlePrimaryUnfollow = () => {\r\n        // pop up modal to ask if sure to delete\r\n        handleClickUnfollowModalOpen();\r\n    };\r\n    const handleSecondaryUnfollow = () => {\r\n        handleUnfollowModalClose();\r\n        APIHelper.unfollowUser(profileUser.id)\r\n            .then(data =>{\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    return console.error(data.error);\r\n                }\r\n                // setIsFollowing(false);\r\n                loadUserFollowed(profileUser.id);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"profile\" onScroll={handleScroll}>\r\n            {!profileUser.error && !profileUser.id ? \r\n                <div className=\"profile__loading\"></div>\r\n                :\r\n                (profileUser.id ? \r\n                    // valid user\r\n                    <div>\r\n                        <div className=\"profile__header\">\r\n                            <ArrowBackIcon className=\"profile__backIcon\" onClick={goBack}/>\r\n                            <div className=\"profile__header__validUser\">\r\n                                <h2>{profileUser.display_name}</h2>\r\n                                <div className=\"profile__header__tweetsNum\">{MathHelper.nFormatter(profileUser.tweets.length, 1)} Tweets</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__photos\">\r\n                            <img className=\"profile__photos__bg\" src={profileUser.header_photo} onError={(e)=>{e.target.onerror = null; e.target.src=\"/static/images/bg_grey.png\"}}/>\r\n                            <img className=\"profile__photos__photo\" src={profileUser.photo} onError={(e)=>{e.target.onerror = null; e.target.src=\"/static/images/bg_lightgrey.png\"}}/>\r\n                        </div>\r\n                        <div className=\"profile__info\">\r\n                            <div className=\"profile__info__editProfile\">\r\n                                {user.id === profileUser.id ?\r\n                                    <Button className=\"profile__info__editProfile__outlinedBtn\" name=\"sameUser\" variant=\"outlined\" size=\"medium\" onClick={handleClickEditModalOpen}>Edit Profile</Button>\r\n                                    : (!isFollowing ?\r\n                                        <Button className=\"profile__info__editProfile__outlinedBtn\" name=\"differentUser\" variant=\"outlined\" size=\"medium\" onClick={handleClickFollow}>Follow</Button>\r\n                                        :\r\n                                        <Button className=\"profile__info__editProfile__btn\" name=\"differentUser\" size=\"medium\" onClick={handlePrimaryUnfollow}>\r\n                                            <span name=\"following\">Following</span>\r\n                                            <span name=\"unfollow\" style={{display: 'none'}}>Unfollow</span>\r\n                                        </Button>\r\n                                      )\r\n                                }\r\n                            </div>\r\n                            <h2>{profileUser.display_name}</h2>\r\n                            <p className=\"profile__info__username\">@{profileUser.username}</p>\r\n                            <p className=\"profile__info__bio\">{profileUser.bio}</p>\r\n                            <p className=\"profile__info__miscellaneous\">\r\n                                {profileUser.location ?\r\n                                    <span>\r\n                                        <LocationOnOutlinedIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                        <span className=\"profile__info__location\">{profileUser.location}</span>\r\n                                    </span>\r\n                                    : null\r\n                                }\r\n                                {profileUser.website ?\r\n                                    <span>\r\n                                        <LinkIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                        <a className=\"profile__info__website\" href={profileUser.website}>{new URL(profileUser.website).hostname}</a>\r\n                                    </span>\r\n                                    : null\r\n                                }\r\n                                <span>\r\n                                    <DateRangeIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                    <span>Joined <time dateTime={profileUser.date_joined}>\r\n                                        {moment(profileUser.date_joined).tz(moment.tz.guess()).format('MMM YYYY')}\r\n                                    </time></span>\r\n                                </span>\r\n                            </p>\r\n                            \r\n                            <p className=\"profile__info__follows\">\r\n                                <span className=\"profile__info__followingsCount\"><b>{profileUser.followings_count}</b> Following</span>\r\n                                <span className=\"profile__info__followersCount\"><b>{profileUser.followers_count}</b> Followers</span>\r\n                            </p>\r\n                        </div>\r\n                        <ProfileTweets \r\n                            currentUser={user} \r\n                            profileUser={profileUser} \r\n                            loadUserProfile={loadUserProfile} \r\n                            tweets_currentPage={tweets_currentPage}\r\n                            tweets_setCurrentPage={tweets_setCurrentPage}\r\n                            media_currentPage={media_currentPage}\r\n                            media_setCurrentPage={media_setCurrentPage}\r\n                            likes_currentPage={likes_currentPage}\r\n                            likes_setCurrentPage={likes_setCurrentPage}\r\n                        />\r\n                                \r\n                        {/** Unfollow Dialog */}\r\n                        <Dialog\r\n                            open={unfollowModalOpen}\r\n                            onClose={handleUnfollowModalClose}\r\n                            aria-labelledby=\"unfollow-dialog-title\"\r\n                            aria-describedby=\"unfollow-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"unfollow-dialog-title\">{`Unfollow @${profileUser.username}?`}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"unfollow-dialog-description\">\r\n                                    Their Tweets will no longer show up in your home timeline. You can still view their profile, unless their Tweets are protected. \r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleUnfollowModalClose} color=\"primary\" autoFocus>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleSecondaryUnfollow} color=\"secondary\">\r\n                                    Unfollow\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                    :\r\n                    // user not found\r\n                    <div>\r\n                        <div className=\"profile__header\">\r\n                            <ArrowBackIcon className=\"profile__backIcon\" onClick={goBack}/>\r\n                            <div className=\"profile__header__invalidUser\">\r\n                                <h2>{\"Profile\"}</h2>\r\n                                <div style={{fontSize: 5}}>&nbsp;</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__photos\">\r\n                            <img className=\"profile__photos__bg\" src=\"/static/images/bg_grey.png\" />\r\n                            <img className=\"profile__photos__photo\" src=\"/static/images/bg_lightgrey.png\" />\r\n                        </div>\r\n                        <div className=\"profile__info\">\r\n                            <div className=\"profile__info__editProfile\" style={{height: 40}}/>\r\n                            <h2>@{username}</h2>\r\n                            <div className=\"profile__info__editProfile\" style={{height: 20}}/>\r\n                        </div>\r\n                        <Divider light />\r\n                        <HeadingCard \r\n                            line_1=\"This account doesn’t exist\" \r\n                            line_2=\"Try searching for another.\"\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {/** Edit Dialog  */}\r\n            <Dialog\r\n                className=\"profile__editDialog\"\r\n                open={editModalOpen}\r\n                onClose={handleEditModalClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <form id=\"form__editProfile\" onSubmit={handleEditFormSubmit}>\r\n                    <DialogTitle className=\"profile__editDialog__title\">\r\n                        <IconButton className=\"profile__editDialog__closeButton\" onClick={handleEditModalClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <span>Edit profile</span>\r\n                        <Button type=\"submit\" className=\"profile__editDialog__saveButton\" size=\"medium\">Save</Button>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers className=\"profile__editDialog__content\">\r\n                        <TextField \r\n                            id=\"profile__editForm__bgImage\" \r\n                            name=\"header_photo\"\r\n                            label=\"Background Image URL\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.header_photo}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField \r\n                            id=\"profile__editForm__photo\"\r\n                            name=\"photo\"\r\n                            label=\"Avatar Photo URL\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.photo}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__displayName\"\r\n                            name=\"display_name\"\r\n                            label=\"Display Name\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.display_name}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__bio\" \r\n                            name=\"bio\"\r\n                            label=\"Bio\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.bio}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__location\" \r\n                            name=\"location\"\r\n                            label=\"Location\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.location}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField \r\n                            id=\"profile__editForm__website\" \r\n                            name=\"website\"\r\n                            label=\"Website\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.website}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"YYYY-MM-DD\"\r\n                                margin=\"normal\"\r\n                                id=\"profile__editForm__birthDate\"\r\n                                name=\"birth_date\"\r\n                                label=\"Birth date\"\r\n                                defaultValue={profileUser.birth_date ? moment(profileUser.birth_date) : null}\r\n                                value={editBirthDate}\r\n                                onChange={handleEditBirthDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.cssLabel,\r\n                                        focused: classes.cssFocused\r\n                                    },\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        root: classes.cssOutlinedInput,\r\n                                        focused: classes.cssFocused,\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </DialogContent>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst textFieldStyles = theme => ({\r\n    cssLabel: {\r\n      color: \"var(--twitter-grey)\",\r\n      \"&.Mui-focused\": {\r\n        color: \"var(--twitter-color)\"\r\n      }\r\n    },\r\n    cssOutlinedInput: {\r\n        \"&:not(hover):not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n          borderColor: \"var(--twitter-grey)\"\r\n        },\r\n        \"&:hover:not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n          borderColor: \"var(--twitter-grey)\"\r\n        },\r\n        \"&$cssFocused $notchedOutline\": {\r\n          borderColor: \"var(--twitter-color)\" //focused\r\n        }\r\n    },\r\n    notchedOutline: {},\r\n    cssFocused: {},\r\n    disabled: {},\r\n    error: {},\r\n  });\r\n\r\nexport default withStyles(textFieldStyles)(UserProfile);\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\ProfileTweets.js",["250"],"// React Imports\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n// Components Imports\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport FlipMove from 'react-flip-move';\r\n// Material UI Imports\r\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n// Custom Components\r\nimport Post from './Post';\r\nimport HeadingCard from './HeadingCard';\r\nimport TweetPagination from './TweetPagination';\r\n// Custom Styling\r\nimport '../styles/components/ProfileTweets.css'\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    width: '100%',\r\n    marginTop: 20,\r\n  },\r\n}));\r\n\r\nconst AntTabs = withStyles({\r\n    root: {\r\n      borderBottom: '1px solid var(--twitter-border)',\r\n    },\r\n    indicator: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'transparent',\r\n      '& > span': {\r\n        maxWidth: 60,\r\n        width: '100%',\r\n        backgroundColor: 'var(--twitter-color)',\r\n      },\r\n    },\r\n  })((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n    root: {\r\n      textTransform: 'none',\r\n      minWidth: 72,\r\n      fontSize: 15,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      marginRight: theme.spacing(4),\r\n      transition: '0.3s',\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:hover': {\r\n        backgroundColor: 'var(--twitter-lightest-color)',\r\n        color: 'var(--twitter-color)',\r\n        opacity: 1,\r\n      },\r\n      '&$selected': {\r\n        color: 'var(--twitter-color)',\r\n        fontWeight: theme.typography.fontWeightBold,\r\n      },\r\n      '&:focus': {\r\n        color: 'var(--twitter-color)',\r\n      },\r\n    },\r\n    selected: {},\r\n  }))((props) => <NavLink className=\"profileTweets__tab__link\" to={props.to}><Tab className=\"profileTweets__tab\" {...props} /></NavLink>);\r\n\r\nexport default function ProfileTweets({ \r\n  currentUser, profileUser, loadUserProfile,\r\n  tweets_currentPage, tweets_setCurrentPage,\r\n  media_currentPage, media_setCurrentPage,\r\n  likes_currentPage, likes_setCurrentPage,\r\n}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  let { tab } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (tab === 'media') {\r\n      setValue(1)\r\n    } else if (tab === 'likes') {\r\n      setValue(2)\r\n    } else {\r\n      setValue(0)\r\n    }\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  }; \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n        <AntTabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"fullWidth\"\r\n        > \r\n          <AntTab to={`/profile/${profileUser.username}/`} label=\"Tweets\" {...a11yProps(0)}></AntTab>\r\n          <AntTab to={`/profile/${profileUser.username}/media`} label=\"Media\" {...a11yProps(1)}></AntTab>\r\n          <AntTab to={`/profile/${profileUser.username}/likes`} label=\"Likes\" {...a11yProps(2)}></AntTab>\r\n        </AntTabs>\r\n        <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n        >\r\n            <TabPanel className=\"profileTweets__tweetsTabPanel\" value={value} index={0} dir={theme.direction}>\r\n                {/* User's Tweets */}\r\n                <FlipMove>\r\n                    {profileUser.tweets.map(post => (\r\n                        <Post\r\n                            key={post.id}\r\n                            tweet={post.id}\r\n                            displayName={post.user.display_name}\r\n                            username={post.user.username}\r\n                            userID={post.user.id}\r\n                            verified={post.user.verified}\r\n                            text={post.text}\r\n                            avatar={post.user.photo}\r\n                            image={post.image}\r\n                            dateTime={post.created_at}\r\n                            likes_count={post.likes_count}\r\n                            liked={post.likes.length > 0}\r\n                            fetchPosts={loadUserProfile}\r\n                            currentUserID={currentUser.id}\r\n                        />\r\n                    ))}\r\n                </FlipMove>\r\n                {profileUser.tweets.length === 0 ? \r\n                  <HeadingCard line_1={`@${profileUser.username} hasn't Tweeted anything yet`} line_2=\"When they do, their tweets will show up here.\"/>\r\n                  : null\r\n                }\r\n                {/* Pagination */}\r\n                <TweetPagination \r\n                    pageCount={profileUser.tweets_pages}\r\n                    currentPage={tweets_currentPage}\r\n                    setCurrentPage={tweets_setCurrentPage}\r\n                />\r\n            </TabPanel>\r\n            <TabPanel className=\"profileTweets__tweetsTabPanel\" value={value} index={1} dir={theme.direction}>\r\n                {/* User's Tweets with Media */}\r\n                <FlipMove>\r\n                    {profileUser.media.map(post => (\r\n                        <Post\r\n                            key={post.id}\r\n                            tweet={post.id}\r\n                            displayName={post.user.display_name}\r\n                            username={post.user.username}\r\n                            userID={post.user.id}\r\n                            verified={post.user.verified}\r\n                            text={post.text}\r\n                            avatar={post.user.photo}\r\n                            image={post.image}\r\n                            dateTime={post.created_at}\r\n                            likes_count={post.likes_count}\r\n                            liked={post.likes.length > 0}\r\n                            fetchPosts={loadUserProfile}\r\n                            currentUserID={currentUser.id}\r\n                        />\r\n                    ))}\r\n                </FlipMove>\r\n                {profileUser.media.length === 0 ? \r\n                  <HeadingCard line_1={`@${profileUser.username} hasn't Tweeted any photos`} line_2=\"When they do, their media will show up here.\"/>\r\n                  : null\r\n                }\r\n                {/* Pagination */}\r\n                <TweetPagination \r\n                    pageCount={profileUser.media_pages}\r\n                    currentPage={media_currentPage}\r\n                    setCurrentPage={media_setCurrentPage}\r\n                />\r\n            </TabPanel>\r\n            <TabPanel className=\"profileTweets__tweetsTabPanel\" value={value} index={2} dir={theme.direction}>\r\n                {/* User's LikedTweets */}\r\n                <FlipMove>\r\n                    {profileUser.likes.map(postLike => {\r\n                      const post = postLike.tweet;\r\n                      return (\r\n                        <Post\r\n                            key={post.id}\r\n                            tweet={post.id}\r\n                            displayName={post.user.display_name}\r\n                            username={post.user.username}\r\n                            userID={post.user.id}\r\n                            verified={post.user.verified}\r\n                            text={post.text}\r\n                            avatar={post.user.photo}\r\n                            image={post.image}\r\n                            dateTime={post.created_at}\r\n                            likes_count={post.likes_count}\r\n                            liked={post.likes.length > 0}\r\n                            fetchPosts={loadUserProfile}\r\n                            currentUserID={currentUser.id}\r\n                        />);\r\n                    })}\r\n                </FlipMove>\r\n                {profileUser.likes.length === 0 ? \r\n                  <HeadingCard line_1={`@${profileUser.username} hasn't Liked any Tweets`} line_2=\"When they do, their liked tweets will show up here.\"/>\r\n                  : null\r\n                }\r\n                {/* Pagination */}\r\n                <TweetPagination \r\n                    pageCount={profileUser.likes_pages}\r\n                    currentPage={likes_currentPage}\r\n                    setCurrentPage={likes_setCurrentPage}\r\n                />\r\n            </TabPanel>\r\n        </SwipeableViews>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\helpers\\api.js",["251"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\helpers\\math.js",["252"],"const nFormatter = (num, digits) => {\r\n    // Format a number with thousands suffixes\r\n    var si = [\r\n      { value: 1, symbol: \"\" },\r\n      { value: 1E3, symbol: \"k\" },\r\n      { value: 1E6, symbol: \"M\" },\r\n      { value: 1E9, symbol: \"G\" },\r\n      { value: 1E12, symbol: \"T\" },\r\n      { value: 1E15, symbol: \"P\" },\r\n      { value: 1E18, symbol: \"E\" }\r\n    ];\r\n    var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n    var i;\r\n    for (i = si.length - 1; i > 0; i--) {\r\n      if (num >= si[i].value) {\r\n        break;\r\n      }\r\n    }\r\n    return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n};\r\n  \r\nexport default { nFormatter, };","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\HeadingCard.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\TweetPagination.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Post.js",["253"],"// React Imports\r\nimport React, { forwardRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// Internal Imports\r\nimport moment from 'moment-timezone';\r\n// Material UI Imports\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// Custom Components\r\nimport LikeButton from './LikeButton';\r\nimport MoreButton from './MoreButton';\r\n// Custom Helpers\r\nimport MathHelper from '../helpers/math'\r\n// Custom Styling\r\nimport '../styles/components/Post.css';\r\n\r\nconst Post = forwardRef((\r\n    { \r\n        tweet,\r\n        displayName, \r\n        userID, \r\n        username, \r\n        verified, \r\n        text, \r\n        image, \r\n        avatar,\r\n        dateTime, \r\n        likes_count,\r\n        liked,\r\n        fetchPosts,\r\n        currentUserID\r\n    }, ref ) => {\r\n\r\n    return (\r\n        <div className=\"post\" ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar} />\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <MoreButton className=\"post__more\" tweetUserID={userID} avatar={avatar} text={text} image={image} tweet={tweet} fetchPosts={fetchPosts} currentUserID={currentUserID}/>\r\n                    <div className=\"post__headerText\">\r\n                        <h3 style={{fontWeight: \"normal\"}}>\r\n                            <Link className=\"post__profileLink\" to={`/profile/${username}`}>\r\n                                <b>{displayName}</b>\r\n                            </Link>\r\n                            <span style={{color: \"grey\"}}>\r\n                                <span>\r\n                                    {\" \"}{ verified && <VerifiedUserIcon className=\"post__badge\" /> } @{username} \r\n                                </span>\r\n                                <span> · </span>\r\n                                <time dateTime={dateTime}>{moment(dateTime).tz(moment.tz.guess()).format('hh:mm A, DD MMM YYYY')}</time>\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                {image ?\r\n                    <img \r\n                        src={image} \r\n                        alt=\"\"\r\n                        onError={(e)=>{e.target.onerror = null; e.target.src=\"/static/images/image_placeholder.png\"}}\r\n                    /> : null\r\n                }\r\n                <div className=\"post__footer\">\r\n                    <Tooltip title=\"Reply\" aria-label=\"reply\">\r\n                        <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Retweet\" aria-label=\"retweet\">\r\n                        <RepeatIcon fontSize=\"small\" />\r\n                    </Tooltip>\r\n                    <div className=\"post__likeDiv\">\r\n                        <LikeButton tweet={tweet} liked={liked} fetchPosts={fetchPosts} />\r\n                        {likes_count > 0 ? \r\n                            <span className=\"post__likeCount\">{MathHelper.nFormatter(likes_count, 1)}</span> : \r\n                            <span className=\"post__likeCount__empty\"></span>\r\n                        }\r\n                    </div>\r\n                    <Tooltip title=\"Share\" aria-label=\"share\">\r\n                        <PublishIcon fontSize=\"small\" />\r\n                    </Tooltip>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post;\r\n","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\LikeButton.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\MoreButton.js",["254","255","256"],"// React Imports\r\nimport React, { useState } from 'react';\r\n// Material UI Imports\r\n//// Core\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n//// Icons\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport PersonAddDisabledOutlinedIcon from '@material-ui/icons/PersonAddDisabledOutlined';\r\n// Custom Components\r\nimport Tweetbox from './Tweetbox';\r\n// Custom Helpers\r\nimport APIHelper from '../helpers/api'\r\n// Custom Styling\r\nimport '../styles/components/MoreButton.css'\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n})((props) => (\r\n    <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      {...props}\r\n    />\r\n));\r\n\r\nfunction MoreButton({ tweetUserID, avatar, text, image, tweet, fetchPosts, currentUserID }) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [delModalOpen, setDelModalOpen] = useState(false);\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n    {/** More Button Menu */}\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    {/** Del Button Dialog */}\r\n    const handleClickDelModalOpen = () => {\r\n        setDelModalOpen(true);\r\n    };\r\n    const handleDelModalClose = () => {\r\n        setDelModalOpen(false);\r\n    };\r\n    const handlePrimaryDelete = () => {\r\n        handleClose();\r\n        // pop up modal to ask if sure to delete\r\n        handleClickDelModalOpen();\r\n    };\r\n    const handleSecondaryDelete = () => {\r\n        handleDelModalClose();\r\n        APIHelper.deleteTweet(tweet)\r\n            .then((data) => {\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    return console.error(data.error);\r\n                }\r\n                fetchPosts();\r\n                fetchPosts(true);\r\n            });\r\n    };\r\n\r\n    {/** Edit Button Dialog */}\r\n    const handleClickEditModalOpen = () => {\r\n        setEditModalOpen(true);\r\n    };\r\n    const handleEditModalClose = () => {\r\n        setEditModalOpen(false);\r\n    };\r\n    const handlePrimaryEdit = () => {\r\n        handleClose();\r\n        // pop up modal to edit post\r\n        handleClickEditModalOpen();\r\n    };\r\n\r\n    return (\r\n        <div className=\"moreButton\">\r\n            <Tooltip title=\"More\" aria-label=\"more\">\r\n            <MoreHorizIcon\r\n                aria-controls=\"more-menu\"\r\n                aria-haspopup=\"true\"\r\n                className={anchorEl ? \"moreButton__icon is-active\" : \"moreButton__icon\"}\r\n                fontSize=\"small\"\r\n                onClick={handleClick}\r\n            />\r\n            </Tooltip>\r\n            <StyledMenu\r\n                id=\"more-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {/** Current User = Tweet Owner */}\r\n                {tweetUserID === currentUserID ?\r\n                    <div>\r\n                        <MenuItem onClick={handlePrimaryDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteForeverOutlinedIcon fontSize=\"small\" color=\"secondary\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Delete\" className=\"moreButton__delete\"/>\r\n                        </MenuItem>\r\n                        <MenuItem onClick={handlePrimaryEdit}>\r\n                            <ListItemIcon>\r\n                                <EditOutlinedIcon fontSize=\"small\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Edit\" />\r\n                        </MenuItem>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <MenuItem>\r\n                            <ListItemIcon>\r\n                                <PersonAddOutlinedIcon fontSize=\"small\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Follow\" />\r\n                        </MenuItem>\r\n                        <MenuItem>\r\n                            <ListItemIcon>\r\n                                <PersonAddDisabledOutlinedIcon fontSize=\"small\" color=\"secondary\"/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Unfollow\" className=\"moreButton__delete\"/>\r\n                        </MenuItem>\r\n                    </div>\r\n                }\r\n            </StyledMenu>\r\n\r\n            {/** Delete Dialog  */}\r\n            <Dialog\r\n                open={delModalOpen}\r\n                onClose={handleDelModalClose}\r\n                aria-labelledby=\"del-dialog-title\"\r\n                aria-describedby=\"del-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"del-dialog-title\">{\"Delete Tweet?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"del-dialog-description\">\r\n                        This can’t be undone and it will be removed from your profile, the timeline of any accounts that follow you, and from Twitter search results. \r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDelModalClose} color=\"primary\" autoFocus>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSecondaryDelete} color=\"secondary\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/** Edit Dialog  */}\r\n            <Dialog\r\n                className=\"moreButton__editDialog\"\r\n                open={editModalOpen}\r\n                onClose={handleEditModalClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <DialogTitle className=\"moreButton__editDialog__title\">\r\n                    <IconButton className=\"moreButton__editDialog__closeButton\" onClick={handleEditModalClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <span>Edit Tweet</span>\r\n                </DialogTitle>\r\n                <DialogContent dividers className=\"moreButton__editDialog__content\">\r\n                    <Tweetbox isEditMode={true} avatar={avatar} fetchPosts={fetchPosts} initText={text} initImage={image} tweetID={tweet} handleEditModalClose={handleEditModalClose} />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoreButton;","C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Tweetbox.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Feed.js",["257","258"],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\FeedTweets.js",[],"C:\\Users\\elaie\\Downloads\\FullStack_Ecommerce_App-main\\frontend\\src\\pages\\Profile.js",["259","260","261","262","263","264","265","266","267","268","269","270"],"// React Imports\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n// Internal Imports\r\nimport moment from 'moment-timezone';\r\nimport MomentUtils from '@date-io/moment';\r\n// Material UI Imports\r\n//// Core\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//// Pickers\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\r\n//// Icons\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Custom Components\r\nimport ProfileTweets from './ProfileTweets'\r\nimport HeadingCard from './HeadingCard'\r\n// Custom Helpers\r\nimport APIHelper from '../helpers/api';\r\nimport MathHelper from '../helpers/math';\r\n// Custom Styling\r\nimport '../styles/components/Profile.css';\r\n\r\nfunction Profile({ user, classes }) {\r\n    let history = useHistory()\r\n    const { username } = useParams();\r\n    const [profileUser, setProfileUser] = useState({});\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [editBirthDate, setEditBirthDate] = useState(null);\r\n    const [unfollowModalOpen, setUnfollowModalOpen] = useState(false);\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n    /** Pagination */\r\n    const [tweets_currentPage, tweets_setCurrentPage] = useState(0);\r\n    const [media_currentPage, media_setCurrentPage] = useState(0);\r\n    const [likes_currentPage, likes_setCurrentPage] = useState(0);\r\n    useEffect(() => {\r\n        loadUserProfile();\r\n    }, [tweets_currentPage, media_currentPage, likes_currentPage]);\r\n\r\n    const loadUserFollowed = (userId) => {\r\n        APIHelper.isUserFollowedByMe(userId)\r\n            .then(data => {\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    console.error(data.error);\r\n                }\r\n                setIsFollowing(data);\r\n            });\r\n    };\r\n\r\n    const loadUserProfile = () => {\r\n        APIHelper.getUserInfoByUsername(username, {\r\n            tweets_page: tweets_currentPage + 1, \r\n            media_page: media_currentPage + 1, \r\n            likes_page: likes_currentPage + 1\r\n        }).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                console.error(data.error);\r\n            }\r\n            setProfileUser(data);\r\n            if (profileUser.birth_date) {\r\n                setEditBirthDate(moment(profileUser.birth_date));\r\n            }\r\n            loadUserFollowed(profileUser.id);\r\n        });\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        const top = e.target.scrollTop === 0;\r\n        if (top) {\r\n            loadUserProfile(); // only fetch when scroll to the top of feeds\r\n        }\r\n    };\r\n\r\n    useEffect(() =>{ // componentWillMount\r\n        loadUserProfile();\r\n    }, []);\r\n\r\n    const goBack = () => {\r\n        history.push(-1);\r\n    };\r\n\r\n    {/** Edit Button Dialog */}\r\n    const handleClickEditModalOpen = () => {\r\n        setEditModalOpen(true);\r\n    };\r\n    const handleEditModalClose = () => {\r\n        setEditModalOpen(false);\r\n        setEditBirthDate(profileUser.birth_date ? moment(profileUser.birth_date) : null);\r\n    };\r\n\r\n    {/** Edit Birth Date Field */}\r\n    const handleEditBirthDateChange = (date) => {\r\n        setEditBirthDate(date ? moment(date) : null);\r\n    };\r\n\r\n    {/** Edit Form Submission */}\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target);\r\n        const dataObj = Object.fromEntries(data.entries());\r\n        if (dataObj.birth_date) {\r\n            dataObj.birth_date = moment(dataObj.birth_date).format(\"YYYY-MM-DD\");\r\n        }\r\n        if (dataObj.birth_date === '') {\r\n            delete dataObj.birth_date;\r\n        }\r\n        APIHelper.updateUserInfo(dataObj).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                return console.error(data.error);\r\n            }\r\n            handleEditModalClose(); // close modal\r\n            loadUserProfile();\r\n        });\r\n    };\r\n\r\n    {/** Handle Follow/Unfollow button */}\r\n    const handleClickFollow = () => {\r\n        APIHelper.followUser(profileUser.id).then(data => {\r\n            if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                return console.error(data.error);\r\n            }\r\n            // setIsFollowing(true);\r\n            loadUserFollowed(profileUser.id);\r\n        });\r\n    };\r\n    \r\n    {/** Unfollow Button Dialog */}\r\n    const handleClickUnfollowModalOpen = () => {\r\n        setUnfollowModalOpen(true);\r\n    };\r\n    const handleUnfollowModalClose = () => {\r\n        setUnfollowModalOpen(false);\r\n    };\r\n    const handlePrimaryUnfollow = () => {\r\n        // pop up modal to ask if sure to delete\r\n        handleClickUnfollowModalOpen();\r\n    };\r\n    const handleSecondaryUnfollow = () => {\r\n        handleUnfollowModalClose();\r\n        APIHelper.unfollowUser(profileUser.id)\r\n            .then(data =>{\r\n                if (APIHelper.type(data) === \"Object\" && data.error) {\r\n                    return console.error(data.error);\r\n                }\r\n                // setIsFollowing(false);\r\n                loadUserFollowed(profileUser.id);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"profile\" onScroll={handleScroll}>\r\n            {!profileUser.error && !profileUser.id ? \r\n                <div className=\"profile__loading\"></div>\r\n                :\r\n                (profileUser.id ? \r\n                    // valid user\r\n                    <div>\r\n                        <div className=\"profile__header\">\r\n                            <ArrowBackIcon className=\"profile__backIcon\" onClick={goBack}/>\r\n                            <div className=\"profile__header__validUser\">\r\n                                <h2>{profileUser.display_name}</h2>\r\n                                <div className=\"profile__header__tweetsNum\">{MathHelper.nFormatter(profileUser.tweets.length, 1)} Tweets</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__photos\">\r\n                            <img className=\"profile__photos__bg\" src={profileUser.header_photo} onError={(e)=>{e.target.onerror = null; e.target.src=\"/static/images/bg_grey.png\"}}/>\r\n                            <img className=\"profile__photos__photo\" src={profileUser.photo} onError={(e)=>{e.target.onerror = null; e.target.src=\"/static/images/bg_lightgrey.png\"}}/>\r\n                        </div>\r\n                        <div className=\"profile__info\">\r\n                            <div className=\"profile__info__editProfile\">\r\n                                {user.id === profileUser.id ?\r\n                                    <Button className=\"profile__info__editProfile__outlinedBtn\" name=\"sameUser\" variant=\"outlined\" size=\"medium\" onClick={handleClickEditModalOpen}>Edit Profile</Button>\r\n                                    : (!isFollowing ?\r\n                                        <Button className=\"profile__info__editProfile__outlinedBtn\" name=\"differentUser\" variant=\"outlined\" size=\"medium\" onClick={handleClickFollow}>Follow</Button>\r\n                                        :\r\n                                        <Button className=\"profile__info__editProfile__btn\" name=\"differentUser\" size=\"medium\" onClick={handlePrimaryUnfollow}>\r\n                                            <span name=\"following\">Following</span>\r\n                                            <span name=\"unfollow\" style={{display: 'none'}}>Unfollow</span>\r\n                                        </Button>\r\n                                      )\r\n                                }\r\n                            </div>\r\n                            <h2>{profileUser.display_name}</h2>\r\n                            <p className=\"profile__info__username\">@{profileUser.username}</p>\r\n                            <p className=\"profile__info__bio\">{profileUser.bio}</p>\r\n                            <p className=\"profile__info__miscellaneous\">\r\n                                {profileUser.location ?\r\n                                    <span>\r\n                                        <LocationOnOutlinedIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                        <span className=\"profile__info__location\">{profileUser.location}</span>\r\n                                    </span>\r\n                                    : null\r\n                                }\r\n                                {profileUser.website ?\r\n                                    <span>\r\n                                        <LinkIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                        <a className=\"profile__info__website\" href={profileUser.website}>{new URL(profileUser.website).hostname}</a>\r\n                                    </span>\r\n                                    : null\r\n                                }\r\n                                <span>\r\n                                    <DateRangeIcon className=\"profile__info__icons\" size=\"small\"/>\r\n                                    <span>Joined <time dateTime={profileUser.date_joined}>\r\n                                        {moment(profileUser.date_joined).tz(moment.tz.guess()).format('MMM YYYY')}\r\n                                    </time></span>\r\n                                </span>\r\n                            </p>\r\n                            \r\n                            <p className=\"profile__info__follows\">\r\n                                <span className=\"profile__info__followingsCount\"><b>{profileUser.followings_count}</b> Following</span>\r\n                                <span className=\"profile__info__followersCount\"><b>{profileUser.followers_count}</b> Followers</span>\r\n                            </p>\r\n                        </div>\r\n                        <ProfileTweets \r\n                            currentUser={user} \r\n                            profileUser={profileUser} \r\n                            loadUserProfile={loadUserProfile} \r\n                            tweets_currentPage={tweets_currentPage}\r\n                            tweets_setCurrentPage={tweets_setCurrentPage}\r\n                            media_currentPage={media_currentPage}\r\n                            media_setCurrentPage={media_setCurrentPage}\r\n                            likes_currentPage={likes_currentPage}\r\n                            likes_setCurrentPage={likes_setCurrentPage}\r\n                        />\r\n                                \r\n                        {/** Unfollow Dialog */}\r\n                        <Dialog\r\n                            open={unfollowModalOpen}\r\n                            onClose={handleUnfollowModalClose}\r\n                            aria-labelledby=\"unfollow-dialog-title\"\r\n                            aria-describedby=\"unfollow-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"unfollow-dialog-title\">{`Unfollow @${profileUser.username}?`}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"unfollow-dialog-description\">\r\n                                    Their Tweets will no longer show up in your home timeline. You can still view their profile, unless their Tweets are protected. \r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={handleUnfollowModalClose} color=\"primary\" autoFocus>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={handleSecondaryUnfollow} color=\"secondary\">\r\n                                    Unfollow\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                    :\r\n                    // user not found\r\n                    <div>\r\n                        <div className=\"profile__header\">\r\n                            <ArrowBackIcon className=\"profile__backIcon\" onClick={goBack}/>\r\n                            <div className=\"profile__header__invalidUser\">\r\n                                <h2>{\"Profile\"}</h2>\r\n                                <div style={{fontSize: 5}}>&nbsp;</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"profile__photos\">\r\n                            <img className=\"profile__photos__bg\" src=\"/static/images/bg_grey.png\" />\r\n                            <img className=\"profile__photos__photo\" src=\"/static/images/bg_lightgrey.png\" />\r\n                        </div>\r\n                        <div className=\"profile__info\">\r\n                            <div className=\"profile__info__editProfile\" style={{height: 40}}/>\r\n                            <h2>@{username}</h2>\r\n                            <div className=\"profile__info__editProfile\" style={{height: 20}}/>\r\n                        </div>\r\n                        <Divider light />\r\n                        <HeadingCard \r\n                            line_1=\"This account doesn’t exist\" \r\n                            line_2=\"Try searching for another.\"\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {/** Edit Dialog  */}\r\n            <Dialog\r\n                className=\"profile__editDialog\"\r\n                open={editModalOpen}\r\n                onClose={handleEditModalClose}\r\n                fullWidth\r\n                maxWidth=\"sm\"\r\n            >\r\n                <form id=\"form__editProfile\" onSubmit={handleEditFormSubmit}>\r\n                    <DialogTitle className=\"profile__editDialog__title\">\r\n                        <IconButton className=\"profile__editDialog__closeButton\" onClick={handleEditModalClose}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <span>Edit profile</span>\r\n                        <Button type=\"submit\" className=\"profile__editDialog__saveButton\" size=\"medium\">Save</Button>\r\n                    </DialogTitle>\r\n                    <DialogContent dividers className=\"profile__editDialog__content\">\r\n                        <TextField \r\n                            id=\"profile__editForm__bgImage\" \r\n                            name=\"header_photo\"\r\n                            label=\"Background Image URL\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.header_photo}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField \r\n                            id=\"profile__editForm__photo\"\r\n                            name=\"photo\"\r\n                            label=\"Avatar Photo URL\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.photo}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__displayName\"\r\n                            name=\"display_name\"\r\n                            label=\"Display Name\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.display_name}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                            required\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__bio\" \r\n                            name=\"bio\"\r\n                            label=\"Bio\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.bio}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField\r\n                            id=\"profile__editForm__location\" \r\n                            name=\"location\"\r\n                            label=\"Location\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.location}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TextField \r\n                            id=\"profile__editForm__website\" \r\n                            name=\"website\"\r\n                            label=\"Website\" \r\n                            variant=\"outlined\"\r\n                            defaultValue={profileUser.website}\r\n                            InputLabelProps={{\r\n                                classes: {\r\n                                    root: classes.cssLabel,\r\n                                    focused: classes.cssFocused\r\n                                },\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.cssOutlinedInput,\r\n                                    focused: classes.cssFocused,\r\n                                    notchedOutline: classes.notchedOutline\r\n                                },\r\n                            }}\r\n                        />\r\n                        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                inputVariant=\"outlined\"\r\n                                format=\"YYYY-MM-DD\"\r\n                                margin=\"normal\"\r\n                                id=\"profile__editForm__birthDate\"\r\n                                name=\"birth_date\"\r\n                                label=\"Birth date\"\r\n                                defaultValue={profileUser.birth_date ? moment(profileUser.birth_date) : null}\r\n                                value={editBirthDate}\r\n                                onChange={handleEditBirthDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.cssLabel,\r\n                                        focused: classes.cssFocused\r\n                                    },\r\n                                }}\r\n                                InputProps={{\r\n                                    classes: {\r\n                                        root: classes.cssOutlinedInput,\r\n                                        focused: classes.cssFocused,\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    </DialogContent>\r\n                </form>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst textFieldStyles = theme => ({\r\n    cssLabel: {\r\n      color: \"var(--twitter-grey)\",\r\n      \"&.Mui-focused\": {\r\n        color: \"var(--twitter-color)\"\r\n      }\r\n    },\r\n    cssOutlinedInput: {\r\n        \"&:not(hover):not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n          borderColor: \"var(--twitter-grey)\"\r\n        },\r\n        \"&:hover:not($disabled):not($cssFocused):not($error) $notchedOutline\": {\r\n          borderColor: \"var(--twitter-grey)\"\r\n        },\r\n        \"&$cssFocused $notchedOutline\": {\r\n          borderColor: \"var(--twitter-color)\" //focused\r\n        }\r\n    },\r\n    notchedOutline: {},\r\n    cssFocused: {},\r\n    disabled: {},\r\n    error: {},\r\n  });\r\n\r\nexport default withStyles(textFieldStyles)(Profile);\r\n",{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":21},{"ruleId":"275","severity":1,"message":"279","line":22,"column":8,"nodeType":"277","messageId":"278","endLine":22,"endColumn":16},{"ruleId":"275","severity":1,"message":"280","line":25,"column":8,"nodeType":"277","messageId":"278","endLine":25,"endColumn":15},{"ruleId":"275","severity":1,"message":"281","line":18,"column":9,"nodeType":"277","messageId":"278","endLine":18,"endColumn":19},{"ruleId":"275","severity":1,"message":"282","line":47,"column":14,"nodeType":"277","messageId":"278","endLine":47,"endColumn":34},{"ruleId":"283","severity":1,"message":"284","line":240,"column":43,"nodeType":"285","messageId":"286","endLine":240,"endColumn":45},{"ruleId":"283","severity":1,"message":"284","line":244,"column":39,"nodeType":"285","messageId":"286","endLine":244,"endColumn":41},{"ruleId":"275","severity":1,"message":"287","line":27,"column":19,"nodeType":"277","messageId":"278","endLine":27,"endColumn":33},{"ruleId":"275","severity":1,"message":"288","line":2,"column":37,"nodeType":"277","messageId":"278","endLine":2,"endColumn":40},{"ruleId":"275","severity":1,"message":"289","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":16},{"ruleId":"275","severity":1,"message":"290","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"291","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"292","line":2,"column":38,"nodeType":"277","messageId":"278","endLine":2,"endColumn":49},{"ruleId":"293","severity":1,"message":"294","line":51,"column":8,"nodeType":"295","endLine":51,"endColumn":66,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"294","line":89,"column":8,"nodeType":"295","endLine":89,"endColumn":10,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":95,"column":5,"nodeType":"300","messageId":"301","endLine":95,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":104,"column":5,"nodeType":"300","messageId":"301","endLine":104,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":109,"column":5,"nodeType":"300","messageId":"301","endLine":109,"endColumn":34},{"ruleId":"298","severity":1,"message":"299","line":129,"column":5,"nodeType":"300","messageId":"301","endLine":129,"endColumn":43},{"ruleId":"298","severity":1,"message":"299","line":140,"column":5,"nodeType":"300","messageId":"301","endLine":140,"endColumn":36},{"ruleId":"302","severity":1,"message":"303","line":180,"column":29,"nodeType":"304","endLine":180,"endColumn":182},{"ruleId":"302","severity":1,"message":"303","line":181,"column":29,"nodeType":"304","endLine":181,"endColumn":183},{"ruleId":"302","severity":1,"message":"303","line":274,"column":29,"nodeType":"304","endLine":274,"endColumn":101},{"ruleId":"302","severity":1,"message":"303","line":275,"column":29,"nodeType":"304","endLine":275,"endColumn":109},{"ruleId":"293","severity":1,"message":"305","line":126,"column":3,"nodeType":"277","endLine":126,"endColumn":12,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":296,"column":1,"nodeType":"309","endLine":299,"endColumn":66},{"ruleId":"307","severity":1,"message":"308","line":22,"column":1,"nodeType":"309","endLine":22,"endColumn":32},{"ruleId":"275","severity":1,"message":"290","line":2,"column":29,"nodeType":"277","messageId":"278","endLine":2,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":57,"column":5,"nodeType":"300","messageId":"301","endLine":57,"endColumn":30},{"ruleId":"298","severity":1,"message":"299","line":65,"column":5,"nodeType":"300","messageId":"301","endLine":65,"endColumn":31},{"ruleId":"298","severity":1,"message":"299","line":89,"column":5,"nodeType":"300","messageId":"301","endLine":89,"endColumn":32},{"ruleId":"293","severity":1,"message":"310","line":51,"column":8,"nodeType":"295","endLine":51,"endColumn":21,"suggestions":"311"},{"ruleId":"293","severity":1,"message":"310","line":54,"column":8,"nodeType":"295","endLine":54,"endColumn":30,"suggestions":"312"},{"ruleId":"275","severity":1,"message":"292","line":2,"column":38,"nodeType":"277","messageId":"278","endLine":2,"endColumn":49},{"ruleId":"293","severity":1,"message":"294","line":51,"column":8,"nodeType":"295","endLine":51,"endColumn":66,"suggestions":"313"},{"ruleId":"293","severity":1,"message":"294","line":89,"column":8,"nodeType":"295","endLine":89,"endColumn":10,"suggestions":"314"},{"ruleId":"298","severity":1,"message":"299","line":95,"column":5,"nodeType":"300","messageId":"301","endLine":95,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":104,"column":5,"nodeType":"300","messageId":"301","endLine":104,"endColumn":35},{"ruleId":"298","severity":1,"message":"299","line":109,"column":5,"nodeType":"300","messageId":"301","endLine":109,"endColumn":34},{"ruleId":"298","severity":1,"message":"299","line":129,"column":5,"nodeType":"300","messageId":"301","endLine":129,"endColumn":43},{"ruleId":"298","severity":1,"message":"299","line":140,"column":5,"nodeType":"300","messageId":"301","endLine":140,"endColumn":36},{"ruleId":"302","severity":1,"message":"303","line":180,"column":29,"nodeType":"304","endLine":180,"endColumn":182},{"ruleId":"302","severity":1,"message":"303","line":181,"column":29,"nodeType":"304","endLine":181,"endColumn":183},{"ruleId":"302","severity":1,"message":"303","line":274,"column":29,"nodeType":"304","endLine":274,"endColumn":101},{"ruleId":"302","severity":1,"message":"303","line":275,"column":29,"nodeType":"304","endLine":275,"endColumn":109},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'homePage' is defined but never used.","'Profile' is defined but never used.","'searchTerm' is assigned a value but never used.","'productCreationError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userAccDetails' is assigned a value but never used.","'Row' is defined but never used.","'stockImg' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUserProfile'. Either include it or remove the dependency array.","ArrayExpression",["317"],["318"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect contains a call to 'setValue'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [tab] as a second argument to the useEffect Hook.",["319"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["320"],["321"],["322"],["323"],"no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"324","fix":"334"},{"desc":"326","fix":"335"},"Update the dependencies array to be: [tweets_currentPage, media_currentPage, likes_currentPage, loadUserProfile]",{"range":"336","text":"337"},"Update the dependencies array to be: [loadUserProfile]",{"range":"338","text":"339"},"Add dependencies array: [tab]",{"range":"340","text":"341"},"Update the dependencies array to be: [currentPage, fetchPosts]",{"range":"342","text":"343"},"Update the dependencies array to be: [currentFollowingPage, fetchPosts]",{"range":"344","text":"345"},{"range":"346","text":"337"},{"range":"347","text":"339"},[2245,2303],"[tweets_currentPage, media_currentPage, likes_currentPage, loadUserProfile]",[3534,3536],"[loadUserProfile]",[3650,3650],", [tab]",[1929,1942],"[currentPage, fetchPosts]",[2024,2046],"[currentFollowingPage, fetchPosts]",[2242,2300],[3531,3533]]